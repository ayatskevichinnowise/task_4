{"Event":"SparkListenerLogStart","Spark Version":"3.2.3"}
{"Event":"SparkListenerResourceProfileAdded","Resource Profile Id":0,"Executor Resource Requests":{"cores":{"Resource Name":"cores","Amount":1,"Discovery Script":"","Vendor":""},"memory":{"Resource Name":"memory","Amount":1024,"Discovery Script":"","Vendor":""},"offHeap":{"Resource Name":"offHeap","Amount":0,"Discovery Script":"","Vendor":""}},"Task Resource Requests":{"cpus":{"Resource Name":"cpus","Amount":1.0}}}
{"Event":"SparkListenerExecutorAdded","Timestamp":1674028009715,"Executor ID":"driver","Executor Info":{"Host":"DESKTOP-CH1A60P","Total Cores":4,"Log Urls":{},"Attributes":{},"Resources":{},"Resource Profile Id":0}}
{"Event":"SparkListenerBlockManagerAdded","Block Manager ID":{"Executor ID":"driver","Host":"DESKTOP-CH1A60P","Port":58135},"Maximum Memory":384093388,"Timestamp":1674028009774,"Maximum Onheap Memory":384093388,"Maximum Offheap Memory":0}
{"Event":"SparkListenerEnvironmentUpdate","JVM Information":{"Java Home":"C:\\Program Files\\Java\\jdk1.8.0_202\\jre","Java Version":"1.8.0_202 (Oracle Corporation)","Scala Version":"version 2.12.15"},"Spark Properties":{"spark.driver.host":"DESKTOP-CH1A60P","spark.serializer.objectStreamReset":"100","spark.history.fs.logDirectory":"file:///C:/Users/zq_sl/Downloads/task_4/for_history","spark.eventLog.enabled":"true","spark.driver.port":"58112","spark.rdd.compress":"True","spark.app.name":"spark_basic","spark.scheduler.mode":"FIFO","spark.submit.pyFiles":"","spark.ui.showConsoleProgress":"true","spark.app.startTime":"1674028006275","spark.executor.id":"driver","spark.submit.deployMode":"client","spark.master":"local[*]","spark.eventLog.dir":"file:///C:/Users/zq_sl/Downloads/task_4/for_history","spark.app.id":"local-1674028009493"},"Hadoop Properties":{"yarn.resourcemanager.amlauncher.thread-count":"50","dfs.namenode.resource.check.interval":"5000","yarn.sharedcache.enabled":"false","fs.s3a.connection.maximum":"15","mapreduce.jobtracker.jobhistory.task.numberprogresssplits":"12","mapreduce.tasktracker.healthchecker.script.timeout":"600000","fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","yarn.app.mapreduce.am.scheduler.heartbeat.interval-ms":"1000","hadoop.http.authentication.kerberos.principal":"HTTP/_HOST@LOCALHOST","mapreduce.framework.name":"local","yarn.sharedcache.uploader.server.thread-count":"50","yarn.nodemanager.linux-container-executor.nonsecure-mode.user-pattern":"^[_.A-Za-z0-9][-@_.A-Za-z0-9]{0,255}?[$]?$","dfs.cachereport.intervalMsec":"10000","dfs.namenode.checkpoint.txns":"1000000","tfile.fs.output.buffer.size":"262144","yarn.app.mapreduce.am.job.task.listener.thread-count":"30","mapreduce.tasktracker.local.dir.minspacekill":"0","yarn.resourcemanager.webapp.cross-origin.enabled":"false","fs.AbstractFileSystem.ftp.impl":"org.apache.hadoop.fs.ftp.FtpFs","fs.s3.block.size":"67108864","dfs.client.domain.socket.data.traffic":"false","hadoop.registry.secure":"false","hadoop.hdfs.configuration.version":"1","dfs.bytes-per-checksum":"512","fs.s3a.fast.buffer.size":"1048576","fs.s3.buffer.dir":"${hadoop.tmp.dir}/s3","mapreduce.job.acl-view-job":" ","mapreduce.jobhistory.loadedjobs.cache.size":"5","mapreduce.jobtracker.persist.jobstatus.hours":"1","dfs.datanode.slow.io.warning.threshold.ms":"300","dfs.namenode.handler.count":"10","mapreduce.input.fileinputformat.split.minsize":"0","dfs.datanode.failed.volumes.tolerated":"0","yarn.resourcemanager.container.liveness-monitor.interval-ms":"600000","yarn.resourcemanager.client.thread-count":"50","io.seqfile.compress.blocksize":"1000000","mapreduce.tasktracker.http.threads":"40","dfs.namenode.retrycache.expirytime.millis":"600000","dfs.namenode.backup.address":"0.0.0.0:50100","yarn.sharedcache.checksum.algo.impl":"org.apache.hadoop.yarn.sharedcache.ChecksumSHA256Impl","dfs.datanode.data.dir":"file://${hadoop.tmp.dir}/dfs/data","dfs.datanode.shared.file.descriptor.paths":"/dev/shm,/tmp","dfs.replication":"3","mapreduce.jobtracker.jobhistory.block.size":"3145728","dfs.encrypt.data.transfer.cipher.key.bitlength":"128","mapreduce.reduce.shuffle.fetch.retry.interval-ms":"1000","dfs.secondary.namenode.kerberos.internal.spnego.principal":"${dfs.web.authentication.kerberos.principal}","mapreduce.task.profile.maps":"0-2","dfs.datanode.block-pinning.enabled":"false","yarn.nodemanager.admin-env":"MALLOC_ARENA_MAX=$MALLOC_ARENA_MAX","mapreduce.jobtracker.retiredjobs.cache.size":"1000","mapreduce.am.max-attempts":"2","fs.trash.checkpoint.interval":"0","dfs.namenode.checkpoint.check.period":"60","yarn.nodemanager.container-monitor.interval-ms":"3000","mapreduce.job.map.output.collector.class":"org.apache.hadoop.mapred.MapTask$MapOutputBuffer","hadoop.http.authentication.signature.secret.file":"*********(redacted)","hadoop.jetty.logs.serve.aliases":"true","yarn.timeline-service.handler-thread-count":"10","yarn.resourcemanager.max-completed-applications":"10000","mapreduce.map.skip.proc.count.autoincr":"true","yarn.resourcemanager.system-metrics-publisher.enabled":"false","yarn.sharedcache.webapp.address":"0.0.0.0:8788","yarn.sharedcache.nm.uploader.replication.factor":"10","hadoop.security.groups.negative-cache.secs":"30","yarn.app.mapreduce.task.container.log.backups":"0","ipc.client.fallback-to-simple-auth-allowed":"false","dfs.namenode.fs-limits.max-component-length":"255","mapreduce.tasktracker.taskcontroller":"org.apache.hadoop.mapred.DefaultTaskController","yarn.client.failover-proxy-provider":"org.apache.hadoop.yarn.client.ConfiguredRMFailoverProxyProvider","yarn.timeline-service.http-authentication.simple.anonymous.allowed":"true","ha.health-monitor.check-interval.ms":"1000","dfs.namenode.top.window.num.buckets":"10","yarn.resourcemanager.store.class":"org.apache.hadoop.yarn.server.resourcemanager.recovery.FileSystemRMStateStore","yarn.app.mapreduce.am.hard-kill-timeout-ms":"10000","dfs.datanode.block.id.layout.upgrade.threads":"12","mapreduce.jobtracker.tasktracker.maxblacklists":"4","yarn.nodemanager.docker-container-executor.exec-name":"/usr/bin/docker","yarn.resourcemanager.nodemanagers.heartbeat-interval-ms":"1000","mapred.child.java.opts":"-Xmx200m","hadoop.common.configuration.version":"0.23.0","yarn.nodemanager.remote-app-log-dir-suffix":"logs","yarn.nodemanager.windows-container.cpu-limit.enabled":"false","dfs.namenode.decommission.max.concurrent.tracked.nodes":"100","file.blocksize":"67108864","hadoop.registry.zk.retry.ceiling.ms":"60000","yarn.sharedcache.store.in-memory.initial-delay-mins":"10","mapreduce.jobhistory.principal":"jhs/_HOST@REALM.TLD","dfs.client.read.shortcircuit.skip.checksum":"false","mapreduce.task.profile.reduces":"0-2","dfs.datanode.address":"0.0.0.0:50010","dfs.https.server.keystore.resource":"ssl-server.xml","yarn.timeline-service.webapp.https.address":"${yarn.timeline-service.hostname}:8190","yarn.resourcemanager.scheduler.address":"${yarn.resourcemanager.hostname}:8030","mapreduce.task.timeout":"600000","yarn.sharedcache.client-server.thread-count":"50","hadoop.security.crypto.cipher.suite":"AES/CTR/NoPadding","yarn.resourcemanager.connect.max-wait.ms":"900000","fs.defaultFS":"file:///","fs.har.impl.disable.cache":"true","io.compression.codec.bzip2.library":"system-native","dfs.namenode.audit.loggers":"default","dfs.block.access.key.update.interval":"*********(redacted)","mapreduce.shuffle.connection-keep-alive.timeout":"5","yarn.resourcemanager.webapp.https.address":"${yarn.resourcemanager.hostname}:8090","dfs.namenode.max.objects":"0","mapreduce.jobhistory.address":"0.0.0.0:10020","yarn.nodemanager.address":"${yarn.nodemanager.hostname}:0","mapreduce.task.combine.progress.records":"10000","yarn.resourcemanager.am.max-attempts":"2","yarn.nodemanager.linux-container-executor.cgroups.hierarchy":"/hadoop-yarn","dfs.client.mmap.cache.timeout.ms":"3600000","dfs.mover.max-no-move-interval":"60000","dfs.client.datanode-restart.timeout":"30","dfs.datanode.drop.cache.behind.reads":"false","ipc.server.log.slow.rpc":"false","yarn.nodemanager.webapp.cross-origin.enabled":"false","dfs.namenode.read-lock-reporting-threshold-ms":"5000","yarn.app.mapreduce.am.job.committer.cancel-timeout":"60000","dfs.namenode.checkpoint.edits.dir":"${dfs.namenode.checkpoint.dir}","dfs.balancer.block-move.timeout":"0","dfs.client.block.write.replace-datanode-on-failure.enable":"true","ftp.bytes-per-checksum":"512","yarn.nodemanager.resource.memory-mb":"8192","dfs.heartbeat.interval":"3","mapreduce.jobhistory.joblist.cache.size":"20000","fs.ftp.host":"0.0.0.0","dfs.ha.tail-edits.period":"60","dfs.datanode.max.locked.memory":"0","dfs.datanode.scan.period.hours":"504","yarn.resourcemanager.fs.state-store.num-retries":"0","mapreduce.jobtracker.expire.trackers.interval":"600000","yarn.resourcemanager.nodemanager-connect-retries":"10","hadoop.security.kms.client.encrypted.key.cache.low-watermark":"0.3f","yarn.timeline-service.client.max-retries":"30","dfs.ha.fencing.ssh.connect-timeout":"30000","yarn.log-aggregation-enable":"false","mapreduce.reduce.markreset.buffer.percent":"0.0","fs.AbstractFileSystem.viewfs.impl":"org.apache.hadoop.fs.viewfs.ViewFs","dfs.namenode.edits.noeditlogchannelflush":"false","mapreduce.task.io.sort.factor":"10","mapreduce.tasktracker.outofband.heartbeat":"false","ha.failover-controller.new-active.rpc-timeout.ms":"60000","mapreduce.jobhistory.datestring.cache.size":"200000","mapreduce.job.acl-modify-job":" ","dfs.namenode.https-address":"0.0.0.0:50470","yarn.nodemanager.windows-container.memory-limit.enabled":"false","yarn.timeline-service.webapp.address":"${yarn.timeline-service.hostname}:8188","yarn.app.mapreduce.am.job.committer.commit-window":"10000","yarn.nodemanager.container-manager.thread-count":"20","yarn.timeline-service.ttl-enable":"true","mapreduce.jobhistory.recovery.store.fs.uri":"${hadoop.tmp.dir}/mapred/history/recoverystore","ha.zookeeper.session-timeout.ms":"5000","tfile.io.chunk.size":"1048576","mapreduce.job.speculative.slowtaskthreshold":"1.0","io.serializations":"org.apache.hadoop.io.serializer.WritableSerialization,org.apache.hadoop.io.serializer.avro.AvroSpecificSerialization,org.apache.hadoop.io.serializer.avro.AvroReflectSerialization","hadoop.security.group.mapping.ldap.directory.search.timeout":"10000","dfs.ha.automatic-failover.enabled":"false","dfs.namenode.decommission.interval":"30","fs.swift.impl":"org.apache.hadoop.fs.swift.snative.SwiftNativeFileSystem","yarn.nodemanager.local-cache.max-files-per-directory":"8192","dfs.datanode.handler.count":"10","hadoop.http.cross-origin.enabled":"false","dfs.namenode.xattrs.enabled":"true","dfs.namenode.safemode.threshold-pct":"0.999f","mapreduce.map.sort.spill.percent":"0.80","yarn.timeline-service.client.best-effort":"false","yarn.resourcemanager.webapp.delegation-token-auth-filter.enabled":"*********(redacted)","dfs.datanode.sync.behind.writes":"false","dfs.namenode.stale.datanode.interval":"30000","mapreduce.ifile.readahead":"true","yarn.timeline-service.leveldb-timeline-store.ttl-interval-ms":"300000","hadoop.security.kms.client.encrypted.key.cache.num.refill.threads":"2","yarn.resourcemanager.scheduler.class":"org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler","yarn.app.mapreduce.am.command-opts":"-Xmx1024m","dfs.journalnode.https-address":"0.0.0.0:8481","mapreduce.cluster.local.dir":"${hadoop.tmp.dir}/mapred/local","io.mapfile.bloom.error.rate":"0.005","dfs.user.home.dir.prefix":"/user","yarn.sharedcache.store.class":"org.apache.hadoop.yarn.server.sharedcachemanager.store.InMemorySCMStore","ha.failover-controller.graceful-fence.rpc-timeout.ms":"5000","ftp.replication":"3","mapreduce.jobtracker.persist.jobstatus.dir":"/jobtracker/jobsInfo","hadoop.security.uid.cache.secs":"14400","mapreduce.job.maxtaskfailures.per.tracker":"3","io.skip.checksum.errors":"false","dfs.datanode.directoryscan.interval":"21600","yarn.app.mapreduce.client-am.ipc.max-retries-on-timeouts":"3","dfs.client.read.shortcircuit.streams.cache.expiry.ms":"300000","fs.s3a.connection.timeout":"50000","mapreduce.job.max.split.locations":"10","dfs.namenode.write.stale.datanode.ratio":"0.5f","hadoop.registry.zk.session.timeout.ms":"60000","mapreduce.shuffle.transfer.buffer.size":"131072","yarn.timeline-service.client.retry-interval-ms":"1000","mapreduce.jobtracker.taskcache.levels":"2","yarn.http.policy":"HTTP_ONLY","yarn.sharedcache.uploader.server.address":"0.0.0.0:8046","hadoop.http.authentication.token.validity":"*********(redacted)","mapreduce.shuffle.max.connections":"0","mapreduce.job.emit-timeline-data":"false","mapreduce.jobhistory.move.thread-count":"3","yarn.resourcemanager.admin.client.thread-count":"1","mapreduce.jobtracker.persist.jobstatus.active":"true","yarn.dispatcher.drain-events.timeout":"300000","fs.s3a.buffer.dir":"${hadoop.tmp.dir}/s3a","hadoop.ssl.enabled.protocols":"TLSv1","mapreduce.jobhistory.admin.address":"0.0.0.0:10033","mapreduce.shuffle.port":"13562","yarn.nodemanager.health-checker.interval-ms":"600000","mapreduce.tasktracker.report.address":"127.0.0.1:0","dfs.namenode.edit.log.autoroll.multiplier.threshold":"2.0","io.seqfile.lazydecompress":"true","ftp.blocksize":"67108864","dfs.namenode.backup.http-address":"0.0.0.0:50105","mapreduce.jobtracker.instrumentation":"org.apache.hadoop.mapred.JobTrackerMetricsInst","yarn.client.max-cached-nodemanagers-proxies":"0","yarn.nodemanager.delete.debug-delay-sec":"0","mapreduce.jobtracker.http.address":"0.0.0.0:50030","yarn.nodemanager.pmem-check-enabled":"true","yarn.nodemanager.disk-health-checker.max-disk-utilization-per-disk-percentage":"90.0","mapreduce.app-submission.cross-platform":"false","yarn.resourcemanager.work-preserving-recovery.scheduling-wait-ms":"10000","hadoop.security.groups.cache.secs":"300","yarn.resourcemanager.zk-retry-interval-ms":"1000","nfs.mountd.port":"4242","ipc.maximum.data.length":"67108864","fs.s3a.endpoint":"s3.amazonaws.com","mapreduce.shuffle.max.threads":"0","hadoop.security.authorization":"false","mapreduce.job.complete.cancel.delegation.tokens":"*********(redacted)","fs.s3a.paging.maximum":"5000","nfs.exports.allowed.hosts":"* rw","mapreduce.jobhistory.http.policy":"HTTP_ONLY","yarn.sharedcache.store.in-memory.check-period-mins":"720","dfs.datanode.dns.interface":"default","s3native.replication":"3","hadoop.security.group.mapping.ldap.ssl":"false","dfs.namenode.fs-limits.max-xattrs-per-inode":"32","fs.s3a.downgrade.syncable.exceptions":"true","yarn.client.application-client-protocol.poll-interval-ms":"200","dfs.namenode.fs-limits.max-xattr-size":"16384","dfs.client.write.exclude.nodes.cache.expiry.interval.millis":"600000","ha.zookeeper.parent-znode":"/hadoop-ha","dfs.namenode.safemode.extension":"30000","mapreduce.reduce.shuffle.merge.percent":"0.66","hadoop.security.group.mapping.ldap.search.filter.group":"(objectClass=group)","dfs.blocksize":"134217728","yarn.nodemanager.resourcemanager.minimum.version":"NONE","mapreduce.job.speculative.speculative-cap-running-tasks":"0.1","yarn.admin.acl":"*","yarn.sharedcache.admin.thread-count":"1","yarn.resourcemanager.ha.automatic-failover.enabled":"true","mapreduce.reduce.skip.maxgroups":"0","mapreduce.reduce.shuffle.connect.timeout":"180000","yarn.resourcemanager.address":"${yarn.resourcemanager.hostname}:8032","ipc.client.ping":"true","fs.s3a.threads.core":"15","dfs.namenode.resource.checked.volumes.minimum":"1","mapreduce.shuffle.ssl.file.buffer.size":"65536","yarn.resourcemanager.ha.automatic-failover.embedded":"true","dfs.journalnode.http-address":"0.0.0.0:8480","dfs.block.scanner.volume.bytes.per.second":"1048576","hadoop.ssl.enabled":"false","fs.s3a.multipart.purge":"false","dfs.storage.policy.enabled":"true","mapreduce.job.end-notification.max.attempts":"5","mapreduce.output.fileoutputformat.compress.codec":"org.apache.hadoop.io.compress.DefaultCodec","yarn.nodemanager.container-monitor.procfs-tree.smaps-based-rss.enabled":"false","dfs.namenode.edits.dir":"${dfs.namenode.name.dir}","ha.health-monitor.connect-retry-interval.ms":"1000","yarn.nodemanager.keytab":"/etc/krb5.keytab","dfs.namenode.support.allow.format":"true","mapreduce.jobhistory.keytab":"/etc/security/keytab/jhs.service.keytab","fs.s3a.threads.max":"256","mapreduce.reduce.shuffle.input.buffer.percent":"0.70","mapreduce.cluster.temp.dir":"${hadoop.tmp.dir}/mapred/temp","s3.replication":"3","dfs.client.failover.connection.retries":"0","hadoop.tmp.dir":"/tmp/hadoop-${user.name}","mapreduce.job.maps":"2","dfs.namenode.secondary.http-address":"0.0.0.0:50090","mapreduce.job.end-notification.max.retry.interval":"5000","yarn.log-aggregation.retain-check-interval-seconds":"-1","yarn.resourcemanager.resource-tracker.client.thread-count":"50","nfs.wtmax":"1048576","yarn.timeline-service.leveldb-timeline-store.start-time-read-cache-size":"10000","nfs.dump.dir":"/tmp/.hdfs-nfs","yarn.resourcemanager.ha.automatic-failover.zk-base-path":"/yarn-leader-election","io.seqfile.local.dir":"${hadoop.tmp.dir}/io/local","mapreduce.client.submit.file.replication":"10","mapreduce.jobhistory.minicluster.fixed.ports":"false","fs.s3a.multipart.threshold":"2147483647","dfs.datanode.data.dir.perm":"700","mapreduce.jobhistory.done-dir":"${yarn.app.mapreduce.am.staging-dir}/history/done","dfs.namenode.name.dir":"file://${hadoop.tmp.dir}/dfs/name","yarn.resourcemanager.zk-acl":"world:anyone:rwcda","ipc.client.idlethreshold":"4000","yarn.nodemanager.linux-container-executor.cgroups.strict-resource-usage":"false","mapreduce.reduce.input.buffer.percent":"0.0","fs.ftp.host.port":"21","ipc.ping.interval":"60000","dfs.namenode.num.checkpoints.retained":"2","dfs.namenode.kerberos.internal.spnego.principal":"${dfs.web.authentication.kerberos.principal}","yarn.resourcemanager.admin.address":"${yarn.resourcemanager.hostname}:8033","file.client-write-packet-size":"65536","ipc.client.kill.max":"10","mapreduce.reduce.speculative":"true","mapreduce.local.clientfactory.class.name":"org.apache.hadoop.mapred.LocalClientFactory","mapreduce.job.reducer.unconditional-preempt.delay.sec":"300","yarn.nodemanager.disk-health-checker.interval-ms":"120000","ipc.client.connection.maxidletime":"10000","mapreduce.task.io.sort.mb":"100","yarn.nodemanager.localizer.client.thread-count":"5","yarn.sharedcache.admin.address":"0.0.0.0:8047","dfs.namenode.checkpoint.max-retries":"3","dfs.namenode.reject-unresolved-dn-topology-mapping":"false","dfs.namenode.delegation.token.max-lifetime":"*********(redacted)","yarn.nodemanager.localizer.cache.cleanup.interval-ms":"600000","hadoop.security.crypto.codec.classes.aes.ctr.nopadding":"org.apache.hadoop.crypto.OpensslAesCtrCryptoCodec,org.apache.hadoop.crypto.JceAesCtrCryptoCodec","fs.s3a.connection.ssl.enabled":"true","yarn.nodemanager.process-kill-wait.ms":"2000","dfs.namenode.num.extra.edits.retained":"1000000","mapreduce.job.hdfs-servers":"${fs.defaultFS}","fs.df.interval":"60000","fs.s3.sleepTimeSeconds":"10","yarn.sharedcache.cleaner.resource-sleep-ms":"0","yarn.nodemanager.disk-health-checker.min-healthy-disks":"0.25","io.file.buffer.size":"65536","hadoop.work.around.non.threadsafe.getpwuid":"false","dfs.permissions.superusergroup":"supergroup","hadoop.security.group.mapping.ldap.search.attr.member":"member","hadoop.security.random.device.file.path":"/dev/urandom","mapreduce.tasktracker.dns.interface":"default","hadoop.security.sensitive-config-keys":"*********(redacted)","hadoop.rpc.socket.factory.class.default":"org.apache.hadoop.net.StandardSocketFactory","dfs.permissions.enabled":"true","yarn.resourcemanager.connect.retry-interval.ms":"30000","yarn.scheduler.minimum-allocation-mb":"1024","yarn.app.mapreduce.am.staging-dir":"/tmp/hadoop-yarn/staging","mapreduce.reduce.shuffle.read.timeout":"180000","dfs.datanode.https.address":"0.0.0.0:50475","hadoop.http.cross-origin.max-age":"1800","fs.s3a.connection.establish.timeout":"5000","dfs.namenode.fslock.fair":"true","mapreduce.job.running.map.limit":"0","hadoop.ssl.require.client.cert":"false","hadoop.kerberos.kinit.command":"kinit","hadoop.fuse.connection.timeout":"300","mapreduce.reduce.log.level":"INFO","mapreduce.job.ubertask.enable":"false","yarn.nodemanager.vmem-pmem-ratio":"2.1","dfs.client.slow.io.warning.threshold.ms":"30000","hadoop.rpc.protection":"authentication","ha.health-monitor.rpc-timeout.ms":"45000","s3native.stream-buffer-size":"4096","yarn.nodemanager.remote-app-log-dir":"/tmp/logs","dfs.client.read.shortcircuit.streams.cache.size":"256","dfs.client.use.legacy.blockreader.local":"false","yarn.app.mapreduce.am.containerlauncher.threadpool-initial-size":"10","fs.s3n.multipart.uploads.enabled":"false","dfs.namenode.path.based.cache.retry.interval.ms":"30000","hadoop.security.crypto.buffer.size":"8192","mapreduce.jobhistory.recovery.store.leveldb.path":"${hadoop.tmp.dir}/mapred/history/recoverystore","yarn.client.failover-retries-on-socket-timeouts":"0","dfs.balancer.keytab.enabled":"false","hadoop.security.instrumentation.requires.admin":"false","yarn.nodemanager.delete.thread-count":"4","dfs.datanode.balance.bandwidthPerSec":"1048576","dfs.namenode.name.dir.restore":"false","hadoop.registry.jaas.context":"Client","dfs.client.failover.sleep.max.millis":"15000","yarn.timeline-service.leveldb-timeline-store.path":"${hadoop.tmp.dir}/yarn/timeline","s3.blocksize":"67108864","io.map.index.interval":"128","mapreduce.job.counters.max":"120","dfs.namenode.datanode.registration.ip-hostname-check":"true","yarn.timeline-service.store-class":"org.apache.hadoop.yarn.server.timeline.LeveldbTimelineStore","mapreduce.jobhistory.move.interval-ms":"180000","dfs.namenode.resource.du.reserved":"104857600","dfs.datanode.bp-ready.timeout":"20","yarn.nodemanager.localizer.fetch.thread-count":"4","yarn.resourcemanager.scheduler.client.thread-count":"50","hadoop.ssl.hostname.verifier":"DEFAULT","mapreduce.tasktracker.instrumentation":"org.apache.hadoop.mapred.TaskTrackerMetricsInst","yarn.timeline-service.leveldb-state-store.path":"${hadoop.tmp.dir}/yarn/timeline","mapreduce.job.classloader":"false","mapreduce.task.profile.map.params":"${mapreduce.task.profile.params}","ipc.client.connect.timeout":"20000","s3.stream-buffer-size":"4096","yarn.nm.liveness-monitor.expiry-interval-ms":"600000","dfs.namenode.secondary.https-address":"0.0.0.0:50091","s3native.bytes-per-checksum":"512","dfs.namenode.fs-limits.max-directory-items":"1048576","nfs.server.port":"2049","dfs.namenode.delegation.token.renew-interval":"*********(redacted)","mapreduce.jobtracker.address":"local","yarn.nodemanager.recovery.enabled":"false","mapreduce.job.end-notification.retry.interval":"1000","fs.du.interval":"600000","hadoop.security.groups.cache.warn.after.ms":"5000","file.bytes-per-checksum":"512","dfs.namenode.blocks.per.postponedblocks.rescan":"10000","dfs.namenode.checkpoint.period":"3600","net.topology.script.number.args":"100","mapreduce.task.merge.progress.records":"10000","yarn.nodemanager.localizer.address":"${yarn.nodemanager.hostname}:8040","yarn.timeline-service.keytab":"/etc/krb5.keytab","mapreduce.reduce.shuffle.fetch.retry.timeout-ms":"30000","dfs.webhdfs.user.provider.user.pattern":"^[A-Za-z_][A-Za-z0-9._-]*[$]?$","mapreduce.fileoutputcommitter.algorithm.version":"1","yarn.resourcemanager.work-preserving-recovery.enabled":"true","mapreduce.map.skip.maxrecords":"0","yarn.sharedcache.root-dir":"/sharedcache","mapreduce.jobtracker.handler.count":"10","hadoop.http.authentication.type":"simple","mapreduce.jobtracker.taskscheduler":"org.apache.hadoop.mapred.JobQueueTaskScheduler","mapreduce.job.jvm.numtasks":"1","mapreduce.task.userlog.limit.kb":"0","yarn.resourcemanager.scheduler.monitor.enable":"false","fs.s3n.block.size":"67108864","ipc.client.connect.max.retries":"10","hadoop.registry.zk.retry.times":"5","mapreduce.jobtracker.staging.root.dir":"${hadoop.tmp.dir}/mapred/staging","dfs.namenode.http-address":"0.0.0.0:50070","mapreduce.jobtracker.jobhistory.lru.cache.size":"5","dfs.datanode.directoryscan.threads":"1","dfs.datanode.fsdatasetcache.max.threads.per.volume":"4","dfs.namenode.fs-limits.max-blocks-per-file":"1048576","mapreduce.shuffle.listen.queue.size":"128","mapreduce.tasktracker.local.dir.minspacestart":"0","mapreduce.map.cpu.vcores":"1","hadoop.user.group.static.mapping.overrides":"dr.who=;","dfs.datanode.cache.revocation.timeout.ms":"900000","mapreduce.jobhistory.recovery.store.class":"org.apache.hadoop.mapreduce.v2.hs.HistoryServerFileSystemStateStoreService","dfs.client.mmap.cache.size":"256","dfs.ha.log-roll.period":"120","dfs.client.failover.sleep.base.millis":"500","yarn.resourcemanager.fail-fast":"${yarn.fail-fast}","yarn.resourcemanager.proxy-user-privileges.enabled":"false","mapreduce.job.reducer.preempt.delay.sec":"0","hadoop.util.hash.type":"murmur","dfs.namenode.accesstime.precision":"3600000","yarn.app.mapreduce.client.job.max-retries":"0","mapreduce.reduce.shuffle.retry-delay.max.ms":"60000","mapreduce.task.profile.params":"-agentlib:hprof=cpu=samples,heap=sites,force=n,thread=y,verbose=n,file=%s","yarn.app.mapreduce.shuffle.log.backups":"0","hadoop.registry.zk.retry.interval.ms":"1000","fs.AbstractFileSystem.file.impl":"org.apache.hadoop.fs.local.LocalFs","yarn.nodemanager.log-aggregation.roll-monitoring-interval-seconds":"-1","dfs.client.context":"default","mapreduce.jobhistory.cleaner.interval-ms":"86400000","hadoop.registry.zk.quorum":"localhost:2181","mapreduce.output.fileoutputformat.compress":"false","yarn.resourcemanager.am-rm-tokens.master-key-rolling-interval-secs":"*********(redacted)","hadoop.ssl.server.conf":"ssl-server.xml","dfs.http.policy":"HTTP_ONLY","yarn.sharedcache.cleaner.initial-delay-mins":"10","dfs.client.https.keystore.resource":"ssl-client.xml","mapreduce.client.completion.pollinterval":"5000","hadoop.ssl.keystores.factory.class":"org.apache.hadoop.security.ssl.FileBasedKeyStoresFactory","yarn.app.mapreduce.am.resource.cpu-vcores":"1","yarn.timeline-service.enabled":"false","yarn.acl.enable":"false","dfs.image.transfer.chunksize":"65536","dfs.balancer.max-no-move-interval":"60000","mapreduce.tasktracker.map.tasks.maximum":"2","dfs.namenode.edits.journal-plugin.qjournal":"org.apache.hadoop.hdfs.qjournal.client.QuorumJournalManager","mapreduce.task.profile":"false","dfs.webhdfs.enabled":"true","yarn.resourcemanager.fs.state-store.uri":"${hadoop.tmp.dir}/yarn/system/rmstore","yarn.nodemanager.linux-container-executor.nonsecure-mode.local-user":"nobody","dfs.namenode.list.encryption.zones.num.responses":"100","yarn.resourcemanager.configuration.provider-class":"org.apache.hadoop.yarn.LocalConfigurationProvider","dfs.namenode.top.num.users":"10","yarn.nodemanager.resource.percentage-physical-cpu-limit":"100","mapreduce.jobhistory.client.thread-count":"10","tfile.fs.input.buffer.size":"262144","mapreduce.client.progressmonitor.pollinterval":"1000","yarn.nodemanager.log-dirs":"${yarn.log.dir}/userlogs","io.seqfile.sorter.recordlimit":"1000000","dfs.blockreport.initialDelay":"0","fs.automatic.close":"true","dfs.client.block.write.replace-datanode-on-failure.best-effort":"false","dfs.namenode.replication.min":"1","dfs.balancer.address":"0.0.0.0:0","fs.s3n.multipart.copy.block.size":"5368709120","yarn.nodemanager.hostname":"0.0.0.0","nfs.rtmax":"1048576","yarn.resourcemanager.zk-timeout-ms":"10000","ftp.stream-buffer-size":"4096","yarn.fail-fast":"false","hadoop.security.group.mapping.ldap.search.filter.user":"(&(objectClass=user)(sAMAccountName={0}))","dfs.datanode.directoryscan.throttle.limit.ms.per.sec":"0","yarn.timeline-service.address":"${yarn.timeline-service.hostname}:10200","dfs.namenode.replication.work.multiplier.per.iteration":"2","mapreduce.job.ubertask.maxmaps":"9","fs.s3a.threads.keepalivetime":"60","dfs.namenode.avoid.write.stale.datanode":"false","dfs.short.circuit.shared.memory.watcher.interrupt.check.ms":"60000","dfs.datanode.available-space-volume-choosing-policy.balanced-space-preference-fraction":"0.75f","mapreduce.task.files.preserve.failedtasks":"false","yarn.app.mapreduce.client.job.retry-interval":"2000","ha.failover-controller.graceful-fence.connection.retries":"1","dfs.client.mmap.enabled":"true","mapreduce.reduce.cpu.vcores":"1","fs.client.resolve.remote.symlinks":"true","dfs.image.compression.codec":"org.apache.hadoop.io.compress.DefaultCodec","mapreduce.jobtracker.restart.recover":"false","dfs.namenode.decommission.blocks.per.interval":"500000","hadoop.http.cross-origin.allowed-origins":"*","yarn.timeline-service.generic-application-history.max-applications":"10000","mapreduce.tasktracker.reduce.tasks.maximum":"2","yarn.nodemanager.local-dirs":"${hadoop.tmp.dir}/nm-local-dir","mapreduce.shuffle.connection-keep-alive.enable":"false","yarn.nodemanager.aux-services.mapreduce_shuffle.class":"org.apache.hadoop.mapred.ShuffleHandler","yarn.sharedcache.store.in-memory.staleness-period-mins":"10080","yarn.resourcemanager.nodemanager.minimum.version":"NONE","net.topology.impl":"org.apache.hadoop.net.NetworkTopology","io.map.index.skip":"0","dfs.namenode.safemode.min.datanodes":"0","mapreduce.job.userlog.retain.hours":"24","yarn.scheduler.maximum-allocation-vcores":"32","hadoop.http.cross-origin.allowed-headers":"X-Requested-With,Content-Type,Accept,Origin","yarn.nodemanager.log-aggregation.compression-type":"none","dfs.namenode.enable.retrycache":"true","yarn.ipc.rpc.class":"org.apache.hadoop.yarn.ipc.HadoopYarnProtoRPC","dfs.namenode.startup.delay.block.deletion.sec":"0","mapreduce.reduce.maxattempts":"4","mapreduce.job.committer.setup.cleanup.needed":"true","dfs.datanode.readahead.bytes":"4194304","mapreduce.jobtracker.heartbeats.in.second":"100","mapreduce.job.running.reduce.limit":"0","mapreduce.job.token.tracking.ids.enabled":"*********(redacted)","hadoop.registry.system.acls":"sasl:yarn@, sasl:mapred@, sasl:hdfs@","yarn.nodemanager.recovery.dir":"${hadoop.tmp.dir}/yarn-nm-recovery","mapreduce.jobhistory.intermediate-done-dir":"${yarn.app.mapreduce.am.staging-dir}/history/done_intermediate","yarn.app.mapreduce.shuffle.log.separate":"true","dfs.namenode.delegation.key.update-interval":"86400000","fs.s3a.max.total.tasks":"1000","dfs.client.file-block-storage-locations.num-threads":"10","mapreduce.tasktracker.healthchecker.interval":"60000","hadoop.http.authentication.simple.anonymous.allowed":"true","fs.s3a.fast.upload":"false","dfs.namenode.heartbeat.recheck-interval":"300000","fs.s3a.attempts.maximum":"10","dfs.namenode.avoid.read.stale.datanode":"false","hadoop.registry.zk.connection.timeout.ms":"15000","yarn.nodemanager.health-checker.script.timeout-ms":"1200000","yarn.timeline-service.leveldb-timeline-store.start-time-write-cache-size":"10000","mapreduce.map.log.level":"INFO","mapreduce.output.fileoutputformat.compress.type":"RECORD","yarn.resourcemanager.leveldb-state-store.path":"${hadoop.tmp.dir}/yarn/system/rmstore","hadoop.registry.rm.enabled":"false","mapreduce.ifile.readahead.bytes":"4194304","mapreduce.tasktracker.tasks.sleeptimebeforesigkill":"5000","yarn.resourcemanager.fs.state-store.retry-policy-spec":"2000, 500","dfs.blockreport.intervalMsec":"21600000","yarn.sharedcache.app-checker.class":"org.apache.hadoop.yarn.server.sharedcachemanager.RemoteAppChecker","yarn.nodemanager.linux-container-executor.nonsecure-mode.limit-users":"true","mapreduce.cluster.acls.enabled":"false","mapreduce.job.speculative.retry-after-no-speculate":"1000","dfs.namenode.path.based.cache.refresh.interval.ms":"30000","yarn.resourcemanager.fs.state-store.retry-interval-ms":"1000","file.stream-buffer-size":"4096","mapreduce.map.output.compress.codec":"org.apache.hadoop.io.compress.DefaultCodec","mapreduce.map.speculative":"true","dfs.datanode.use.datanode.hostname":"false","mapreduce.job.speculative.retry-after-speculate":"15000","dfs.namenode.fs-limits.min-block-size":"1048576","yarn.nodemanager.linux-container-executor.cgroups.mount":"false","yarn.app.mapreduce.am.container.log.backups":"0","mapreduce.job.reduce.slowstart.completedmaps":"0.05","dfs.client.read.shortcircuit":"false","yarn.timeline-service.http-authentication.type":"simple","hadoop.security.group.mapping.ldap.search.attr.group.name":"cn","dfs.client.cached.conn.retry":"3","dfs.namenode.invalidate.work.pct.per.iteration":"0.32f","yarn.sharedcache.client-server.address":"0.0.0.0:8045","dfs.replication.max":"512","dfs.namenode.inotify.max.events.per.rpc":"1000","yarn.resourcemanager.hostname":"0.0.0.0","mapreduce.reduce.shuffle.fetch.retry.enabled":"${yarn.nodemanager.recovery.enabled}","mapreduce.map.memory.mb":"1024","mapreduce.task.skip.start.attempts":"2","fs.AbstractFileSystem.hdfs.impl":"org.apache.hadoop.fs.Hdfs","dfs.namenode.lock.detailed-metrics.enabled":"false","ipc.client.rpc-timeout.ms":"0","fs.s3.maxRetries":"4","dfs.default.chunk.view.size":"32768","mapreduce.input.lineinputformat.linespermap":"1","ipc.client.connect.max.retries.on.timeouts":"45","yarn.timeline-service.leveldb-timeline-store.read-cache-size":"104857600","fs.AbstractFileSystem.har.impl":"org.apache.hadoop.fs.HarFs","mapreduce.job.split.metainfo.maxsize":"10000000","yarn.am.liveness-monitor.expiry-interval-ms":"600000","dfs.client.mmap.retry.timeout.ms":"300000","yarn.resourcemanager.container-tokens.master-key-rolling-interval-secs":"*********(redacted)","dfs.namenode.list.cache.directives.num.responses":"100","dfs.image.compress":"false","dfs.namenode.kerberos.principal.pattern":"*","fs.s3n.multipart.uploads.block.size":"67108864","mapreduce.tasktracker.http.address":"0.0.0.0:50060","yarn.resourcemanager.resource-tracker.address":"${yarn.resourcemanager.hostname}:8031","hadoop.fuse.timer.period":"5","yarn.resourcemanager.leveldb-state-store.compaction-interval-secs":"3600","dfs.datanode.hdfs-blocks-metadata.enabled":"false","dfs.namenode.checkpoint.dir":"file://${hadoop.tmp.dir}/dfs/namesecondary","dfs.datanode.max.transfer.threads":"4096","nfs.allow.insecure.ports":"true","mapreduce.client.output.filter":"FAILED","hadoop.http.filter.initializers":"org.apache.hadoop.http.lib.StaticUserWebFilter","mapreduce.reduce.memory.mb":"1024","s3native.client-write-packet-size":"65536","yarn.timeline-service.hostname":"0.0.0.0","file.replication":"1","yarn.nodemanager.container-metrics.unregister-delay-ms":"10000","yarn.nodemanager.log.retain-seconds":"10800","yarn.resourcemanager.keytab":"/etc/krb5.keytab","mapreduce.reduce.merge.inmem.threshold":"1000","dfs.client.https.need-auth":"false","yarn.timeline-service.recovery.enabled":"false","yarn.sharedcache.nm.uploader.thread-count":"20","dfs.blockreport.split.threshold":"1000000","dfs.client.block.write.replace-datanode-on-failure.policy":"DEFAULT","mapreduce.shuffle.ssl.enabled":"false","dfs.namenode.write-lock-reporting-threshold-ms":"5000","dfs.block.access.token.enable":"*********(redacted)","yarn.resourcemanager.state-store.max-completed-applications":"${yarn.resourcemanager.max-completed-applications}","dfs.client.file-block-storage-locations.timeout.millis":"1000","dfs.namenode.block-placement-policy.default.prefer-local-node":"true","mapreduce.job.speculative.minimum-allowed-tasks":"10","yarn.log-aggregation.retain-seconds":"-1","dfs.namenode.replication.considerLoad":"true","yarn.nodemanager.disk-health-checker.min-free-space-per-disk-mb":"0","mapreduce.jobhistory.max-age-ms":"604800000","dfs.namenode.retrycache.heap.percent":"0.03f","hadoop.http.cross-origin.allowed-methods":"GET,POST,HEAD","dfs.datanode.cache.revocation.polling.ms":"500","mapreduce.jobhistory.webapp.address":"0.0.0.0:19888","dfs.namenode.path.based.cache.block.map.allocation.percent":"0.25","mapreduce.jobtracker.system.dir":"${hadoop.tmp.dir}/mapred/system","mapreduce.tasktracker.taskmemorymanager.monitoringinterval":"5000","dfs.journalnode.rpc-address":"0.0.0.0:8485","yarn.client.nodemanager-connect.max-wait-ms":"180000","yarn.resourcemanager.webapp.address":"${yarn.resourcemanager.hostname}:8088","mapreduce.jobhistory.recovery.enable":"false","dfs.client.short.circuit.replica.stale.threshold.ms":"1800000","mapreduce.reduce.shuffle.parallelcopies":"5","fs.trash.interval":"0","dfs.namenode.replication.interval":"3","yarn.app.mapreduce.client.max-retries":"3","hadoop.security.authentication":"simple","dfs.namenode.top.enabled":"true","mapreduce.task.profile.reduce.params":"${mapreduce.task.profile.params}","dfs.datanode.du.reserved":"0","yarn.app.mapreduce.am.resource.mb":"1536","mapreduce.input.fileinputformat.list-status.num-threads":"1","dfs.namenode.lazypersist.file.scrub.interval.sec":"300","yarn.nodemanager.container-executor.class":"org.apache.hadoop.yarn.server.nodemanager.DefaultContainerExecutor","io.mapfile.bloom.size":"1048576","yarn.timeline-service.ttl-ms":"604800000","yarn.nodemanager.resource.cpu-vcores":"8","mapreduce.job.reduces":"1","fs.s3a.multipart.size":"104857600","yarn.scheduler.minimum-allocation-vcores":"1","mapreduce.job.speculative.speculative-cap-total-tasks":"0.01","dfs.datanode.http.address":"0.0.0.0:50075","hadoop.ssl.client.conf":"ssl-client.xml","mapreduce.job.queuename":"default","ha.health-monitor.sleep-after-disconnect.ms":"1000","s3.bytes-per-checksum":"512","yarn.app.mapreduce.shuffle.log.limit.kb":"0","dfs.namenode.list.cache.pools.num.responses":"100","hadoop.security.group.mapping":"org.apache.hadoop.security.JniBasedUnixGroupsMappingWithFallback","yarn.resourcemanager.ha.enabled":"false","dfs.encrypt.data.transfer":"false","hadoop.http.staticuser.user":"dr.who","yarn.nodemanager.linux-container-executor.resources-handler.class":"org.apache.hadoop.yarn.server.nodemanager.util.DefaultLCEResourcesHandler","mapreduce.reduce.shuffle.memory.limit.percent":"0.25","dfs.namenode.top.windows.minutes":"1,5,25","s3.client-write-packet-size":"65536","mapreduce.map.output.compress":"false","ha.zookeeper.acl":"world:anyone:rwcda","ipc.server.max.connections":"0","mapreduce.reduce.skip.proc.count.autoincr":"true","yarn.scheduler.maximum-allocation-mb":"8192","yarn.resourcemanager.scheduler.monitor.policies":"org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.ProportionalCapacityPreemptionPolicy","yarn.sharedcache.cleaner.period-mins":"1440","yarn.app.mapreduce.am.container.log.limit.kb":"0","s3native.blocksize":"67108864","ipc.client.connect.retry.interval":"1000","yarn.resourcemanager.zk-state-store.parent-path":"/rmstore","dfs.namenode.edit.log.autoroll.check.interval.ms":"300000","mapreduce.jobhistory.cleaner.enable":"true","hadoop.security.kms.client.encrypted.key.cache.expiry":"43200000","dfs.client.use.datanode.hostname":"false","dfs.stream-buffer-size":"4096","yarn.client.nodemanager-client-async.thread-pool-max-size":"500","mapreduce.map.maxattempts":"4","dfs.datanode.drop.cache.behind.writes":"false","mapreduce.tasktracker.dns.nameserver":"default","yarn.nodemanager.sleep-delay-before-sigkill.ms":"250","mapreduce.job.end-notification.retry.attempts":"0","yarn.resourcemanager.zk-num-retries":"1000","dfs.client.failover.max.attempts":"15","mapreduce.tasktracker.indexcache.mb":"10","hadoop.registry.zk.root":"/registry","mapreduce.job.reduce.shuffle.consumer.plugin.class":"org.apache.hadoop.mapreduce.task.reduce.Shuffle","yarn.resourcemanager.delayed.delegation-token.removal-interval-ms":"*********(redacted)","yarn.nodemanager.localizer.cache.target-size-mb":"10240","ftp.client-write-packet-size":"65536","mapreduce.jobtracker.maxtasks.perjob":"-1","dfs.block.access.token.lifetime":"*********(redacted)","dfs.namenode.max.extra.edits.segments.retained":"10000","yarn.client.failover-retries":"0","fs.s3a.multipart.purge.age":"86400","dfs.image.transfer.bandwidthPerSec":"0","io.native.lib.available":"true","net.topology.node.switch.mapping.impl":"org.apache.hadoop.net.ScriptBasedMapping","ipc.server.listen.queue.size":"128","map.sort.class":"org.apache.hadoop.util.QuickSort","dfs.namenode.acls.enabled":"false","hadoop.security.kms.client.authentication.retry-count":"1","fs.permissions.umask-mode":"022","dfs.datanode.ipc.address":"0.0.0.0:50020","yarn.nodemanager.vmem-check-enabled":"true","yarn.nodemanager.recovery.compaction-interval-secs":"3600","yarn.app.mapreduce.client-am.ipc.max-retries":"3","dfs.lock.suppress.warning.interval":"10s","dfs.client.block.write.retries":"3","mapreduce.job.ubertask.maxreduces":"1","hadoop.security.kms.client.encrypted.key.cache.size":"500","hadoop.security.java.secure.random.algorithm":"SHA1PRNG","ha.failover-controller.cli-check.rpc-timeout.ms":"20000","yarn.client.nodemanager-connect.retry-interval-ms":"10000","yarn.timeline-service.state-store-class":"org.apache.hadoop.yarn.server.timeline.recovery.LeveldbTimelineStateStore","dfs.client-write-packet-size":"65536","yarn.nodemanager.env-whitelist":"JAVA_HOME,HADOOP_COMMON_HOME,HADOOP_HDFS_HOME,HADOOP_CONF_DIR,HADOOP_YARN_HOME","yarn.sharedcache.nested-level":"3","dfs.datanode.dns.nameserver":"default","yarn.nodemanager.webapp.address":"${yarn.nodemanager.hostname}:8042","rpc.metrics.quantile.enable":"false","mapreduce.jobhistory.admin.acl":"*","yarn.resourcemanager.system-metrics-publisher.dispatcher.pool-size":"10","hadoop.http.authentication.kerberos.keytab":"${user.home}/hadoop.keytab","dfs.image.transfer.timeout":"60000","yarn.resourcemanager.recovery.enabled":"false","dfs.datanode.available-space-volume-choosing-policy.balanced-space-threshold":"10737418240","dfs.client.failover.connection.retries.on.timeouts":"0"},"System Properties":{"java.io.tmpdir":"C:\\Users\\zq_sl\\AppData\\Local\\Temp\\","line.separator":"\r\n","path.separator":";","sun.management.compiler":"HotSpot 64-Bit Tiered Compilers","SPARK_SUBMIT":"true","sun.cpu.endian":"little","user.script":"","java.specification.version":"1.8","java.vm.specification.name":"Java Virtual Machine Specification","java.vendor":"Oracle Corporation","java.vm.specification.version":"1.8","user.home":"C:\\Users\\zq_sl","file.encoding.pkg":"sun.io","sun.nio.ch.bugLevel":"","sun.arch.data.model":"64","sun.boot.library.path":"C:\\Program Files\\Java\\jdk1.8.0_202\\jre\\bin","user.dir":"C:\\Users\\zq_sl\\Downloads\\task_4\\3_Spark_Basics","java.library.path":"C:\\Program Files\\Java\\jdk1.8.0_202\\bin;C:\\WINDOWS\\Sun\\Java\\bin;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\Git\\cmd;C:\\Program Files\\Docker\\Docker\\resources\\bin;C:\\hadoop-2.7.0\\bin;C:\\spark-3.2.3-bin-hadoop2.7\\bin;C:\\Program Files\\Java\\jdk1.8.0_202\\bin;C:\\Users\\zq_sl\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Program Files\\JetBrains\\PyCharm Community Edition 2021.2.3\\bin;;C:\\Users\\zq_sl\\AppData\\Local\\Programs\\Python\\Python310\\Scripts;;C:\\Users\\zq_sl\\AppData\\Local\\Programs\\Microsoft VS Code\\bin;.","sun.cpu.isalist":"amd64","sun.desktop":"windows","os.arch":"amd64","java.vm.version":"25.202-b08","jetty.git.hash":"8da83308eeca865e495e53ef315a249d63ba9332","java.endorsed.dirs":"C:\\Program Files\\Java\\jdk1.8.0_202\\jre\\lib\\endorsed","java.runtime.version":"1.8.0_202-b08","java.vm.info":"mixed mode","java.ext.dirs":"C:\\Program Files\\Java\\jdk1.8.0_202\\jre\\lib\\ext;C:\\WINDOWS\\Sun\\Java\\lib\\ext","user.variant":"","java.runtime.name":"Java(TM) SE Runtime Environment","file.separator":"\\","java.class.version":"52.0","java.specification.name":"Java Platform API Specification","sun.boot.class.path":"C:\\Program Files\\Java\\jdk1.8.0_202\\jre\\lib\\resources.jar;C:\\Program Files\\Java\\jdk1.8.0_202\\jre\\lib\\rt.jar;C:\\Program Files\\Java\\jdk1.8.0_202\\jre\\lib\\sunrsasign.jar;C:\\Program Files\\Java\\jdk1.8.0_202\\jre\\lib\\jsse.jar;C:\\Program Files\\Java\\jdk1.8.0_202\\jre\\lib\\jce.jar;C:\\Program Files\\Java\\jdk1.8.0_202\\jre\\lib\\charsets.jar;C:\\Program Files\\Java\\jdk1.8.0_202\\jre\\lib\\jfr.jar;C:\\Program Files\\Java\\jdk1.8.0_202\\jre\\classes","file.encoding":"Cp1251","user.timezone":"Europe/Moscow","java.specification.vendor":"Oracle Corporation","sun.java.launcher":"SUN_STANDARD","os.version":"10.0","sun.os.patch.level":"","java.vm.specification.vendor":"Oracle Corporation","sun.stderr.encoding":"cp866","user.country":"RU","sun.jnu.encoding":"Cp1251","user.language":"ru","user.country.format":"BY","sun.stdout.encoding":"cp866","java.vendor.url":"http://java.oracle.com/","java.awt.printerjob":"sun.awt.windows.WPrinterJob","java.awt.graphicsenv":"sun.awt.Win32GraphicsEnvironment","awt.toolkit":"sun.awt.windows.WToolkit","os.name":"Windows 10","java.vm.vendor":"Oracle Corporation","java.vendor.url.bug":"http://bugreport.sun.com/bugreport/","user.name":"zq_sl","java.vm.name":"Java HotSpot(TM) 64-Bit Server VM","sun.java.command":"org.apache.spark.deploy.SparkSubmit --conf spark.app.name=spark_basic pyspark-shell","java.home":"C:\\Program Files\\Java\\jdk1.8.0_202\\jre","java.version":"1.8.0_202","sun.io.unicode.encoding":"UnicodeLittle"},"Classpath Entries":{"C:\\spark-3.2.3-bin-hadoop2.7\\jars\\hadoop-client-2.7.4.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\transaction-api-1.1.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\jackson-dataformat-yaml-2.12.3.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\jdo-api-3.0.1.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\hadoop-mapreduce-client-shuffle-2.7.4.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\mesos-1.4.0-shaded-protobuf.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\hadoop-mapreduce-client-common-2.7.4.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\RoaringBitmap-0.9.0.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\arrow-memory-core-2.0.0.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\stream-2.9.6.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\jersey-client-2.34.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\derby-10.14.2.0.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\jakarta.servlet-api-4.0.3.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\arpack-2.2.1.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\spire_2.12-0.17.0.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\py4j-0.10.9.5.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\hive-service-rpc-3.1.2.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\parquet-column-1.12.2.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\libthrift-0.12.0.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\json4s-core_2.12-3.7.0-M11.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\janino-3.0.16.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\hive-llap-common-2.3.9.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\kubernetes-model-node-5.4.1.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\commons-io-2.4.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\hive-common-2.3.9.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\hadoop-mapreduce-client-core-2.7.4.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\audience-annotations-0.5.0.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\parquet-jackson-1.12.2.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\api-util-1.0.0-M20.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\avro-ipc-1.10.2.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\metrics-jvm-4.2.0.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\libfb303-0.9.3.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\paranamer-2.8.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\kubernetes-model-extensions-5.4.1.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\hive-shims-scheduler-2.3.9.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\avro-1.10.2.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\jersey-common-2.34.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\kubernetes-model-networking-5.4.1.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\spark-network-shuffle_2.12-3.2.3.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\jline-2.14.6.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\jcl-over-slf4j-1.7.30.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\javax.jdo-3.2.0-m3.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\hk2-api-2.6.1.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\JLargeArrays-1.5.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\jakarta.ws.rs-api-2.1.6.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\hadoop-yarn-server-web-proxy-2.7.4.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\commons-digester-1.8.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\javolution-5.5.1.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\scala-collection-compat_2.12-2.1.1.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\algebra_2.12-2.0.1.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\jaxb-api-2.2.11.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\kubernetes-model-rbac-5.4.1.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\commons-configuration-1.6.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\jpam-1.1.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\xmlenc-0.52.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\orc-shims-1.6.14.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\commons-crypto-1.1.0.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\jersey-server-2.34.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\slf4j-api-1.7.30.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\jsp-api-2.1.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\bin\\..\\conf\\":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\arrow-memory-netty-2.0.0.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\jakarta.validation-api-2.0.2.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\xml-apis-1.4.01.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\commons-math3-3.4.1.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\jersey-container-servlet-2.34.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\spark-unsafe_2.12-3.2.3.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\kubernetes-model-policy-5.4.1.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\api-asn1-api-1.0.0-M20.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\breeze-macros_2.12-1.2.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\hadoop-yarn-client-2.7.4.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\httpclient-4.5.13.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\spark-tags_2.12-3.2.3.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\commons-beanutils-1.9.4.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\jersey-hk2-2.34.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\generex-1.0.2.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\spark-streaming_2.12-3.2.3.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\scala-compiler-2.12.15.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\pyrolite-4.30.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\htrace-core-3.1.0-incubating.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\commons-cli-1.2.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\aircompressor-0.21.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\ST4-4.0.4.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\datanucleus-rdbms-4.1.19.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\okhttp-3.12.12.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\jakarta.annotation-api-1.3.5.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\oro-2.0.8.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\aopalliance-1.0.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\guice-servlet-3.0.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\kubernetes-model-apiextensions-5.4.1.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\minlog-1.3.0.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\netty-all-4.1.68.Final.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\arpack_combined_all-0.1.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\shims-0.9.0.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\cats-kernel_2.12-2.1.1.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\scala-xml_2.12-1.2.0.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\joda-time-2.10.10.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\spark-hive-thriftserver_2.12-3.2.3.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\jaxb-runtime-2.3.2.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\orc-core-1.6.14.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\hive-vector-code-gen-2.3.9.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\jakarta.inject-2.6.1.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\kubernetes-model-admissionregistration-5.4.1.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\breeze_2.12-1.2.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\datanucleus-core-4.1.17.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\jersey-container-servlet-core-2.34.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\kubernetes-model-discovery-5.4.1.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\apacheds-kerberos-codec-2.0.0-M15.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\metrics-json-4.2.0.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\jackson-module-scala_2.12-2.12.3.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\kubernetes-model-storageclass-5.4.1.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\kubernetes-model-batch-5.4.1.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\commons-logging-1.1.3.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\xz-1.8.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\scala-reflect-2.12.15.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\commons-dbcp-1.4.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\tink-1.6.0.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\json4s-ast_2.12-3.7.0-M11.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\jackson-xc-1.9.13.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\orc-mapreduce-1.6.14.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\aopalliance-repackaged-2.6.1.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\stax-api-1.0.1.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\apacheds-i18n-2.0.0-M15.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\zookeeper-jute-3.6.2.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\snappy-java-1.1.8.4.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\kubernetes-model-common-5.4.1.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\kubernetes-model-flowcontrol-5.4.1.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\spark-hive_2.12-3.2.3.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\xercesImpl-2.12.2.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\kubernetes-model-core-5.4.1.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\spark-kubernetes_2.12-3.2.3.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\json-1.8.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\guice-3.0.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\kubernetes-client-5.4.1.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\json4s-jackson_2.12-3.7.0-M11.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\scala-library-2.12.15.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\kubernetes-model-scheduling-5.4.1.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\okio-1.14.0.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\hive-metastore-2.3.9.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\opencsv-2.3.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\chill_2.12-0.10.0.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\univocity-parsers-2.9.1.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\flatbuffers-java-1.9.0.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\hk2-utils-2.6.1.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\datanucleus-api-jdo-4.2.4.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\metrics-graphite-4.2.0.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\jodd-core-3.5.2.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\spark-tags_2.12-3.2.3-tests.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\commons-httpclient-3.1.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\scala-parser-combinators_2.12-1.1.2.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\metrics-jmx-4.2.0.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\macro-compat_2.12-1.1.1.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\commons-text-1.10.0.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\hk2-locator-2.6.1.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\spark-kvstore_2.12-3.2.3.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\leveldbjni-all-1.8.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\jackson-mapper-asl-1.9.13.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\log4j-1.2.17.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\guava-14.0.1.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\istack-commons-runtime-3.0.8.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\jakarta.xml.bind-api-2.3.2.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\spark-mesos_2.12-3.2.3.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\logging-interceptor-3.12.12.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\hive-serde-2.3.9.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\super-csv-2.2.0.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\hadoop-common-2.7.4.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\hive-shims-2.3.9.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\protobuf-java-2.5.0.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\hadoop-yarn-api-2.7.4.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\compress-lzf-1.0.3.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\parquet-format-structures-1.12.2.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\jackson-annotations-2.12.3.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\blas-2.2.1.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\jetty-6.1.26.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\spark-network-common_2.12-3.2.3.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\spark-catalyst_2.12-3.2.3.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\hadoop-hdfs-2.7.4.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\hive-storage-api-2.7.2.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\automaton-1.11-8.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\rocksdbjni-6.20.3.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\threeten-extra-1.5.0.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\hive-shims-common-2.3.9.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\parquet-encoding-1.12.2.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\spire-platform_2.12-0.17.0.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\osgi-resource-locator-1.0.3.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\shapeless_2.12-2.3.3.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\hive-beeline-2.3.9.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\jetty-sslengine-6.1.26.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\commons-compiler-3.0.16.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\slf4j-log4j12-1.7.30.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\lz4-java-1.7.1.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\parquet-hadoop-1.12.2.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\commons-lang3-3.12.0.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\jackson-datatype-jsr310-2.11.2.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\jackson-core-asl-1.9.13.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\jetty-util-6.1.26.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\jackson-core-2.12.3.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\spark-graphx_2.12-3.2.3.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\httpcore-4.4.14.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\json4s-scalap_2.12-3.7.0-M11.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\commons-compress-1.21.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\kubernetes-model-events-5.4.1.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\lapack-2.2.1.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\kubernetes-model-certificates-5.4.1.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\hadoop-mapreduce-client-app-2.7.4.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\snakeyaml-1.27.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\objenesis-2.6.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\commons-collections-3.2.2.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\spark-launcher_2.12-3.2.3.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\zjsonpatch-0.3.0.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\commons-pool-1.5.4.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\commons-lang-2.6.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\arrow-vector-2.0.0.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\antlr-runtime-3.5.2.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\JTransforms-3.1.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\hive-shims-0.23-2.3.9.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\jackson-jaxrs-1.9.13.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\parquet-common-1.12.2.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\spark-yarn_2.12-3.2.3.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\activation-1.1.1.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\spark-sketch_2.12-3.2.3.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\HikariCP-2.5.1.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\velocity-1.5.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\jackson-databind-2.12.3.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\zstd-jni-1.5.0-4.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\jsr305-3.0.0.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\commons-net-3.1.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\curator-recipes-2.7.1.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\bonecp-0.8.0.RELEASE.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\hadoop-annotations-2.7.4.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\hive-jdbc-2.3.9.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\kubernetes-model-coordination-5.4.1.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\javax.inject-1.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\xbean-asm9-shaded-4.20.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\metrics-core-4.2.0.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\curator-framework-2.7.1.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\antlr4-runtime-4.8.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\curator-client-2.7.1.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\spark-repl_2.12-3.2.3.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\hive-exec-2.3.9-core.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\annotations-17.0.0.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\spire-util_2.12-0.17.0.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\hive-cli-2.3.9.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\core-1.1.2.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\spark-mllib-local_2.12-3.2.3.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\kubernetes-model-autoscaling-5.4.1.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\hadoop-mapreduce-client-jobclient-2.7.4.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\jta-1.1.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\avro-mapred-1.10.2.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\hadoop-auth-2.7.4.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\ivy-2.5.0.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\arrow-format-2.0.0.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\spark-core_2.12-3.2.3.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\hadoop-yarn-common-2.7.4.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\spark-sql_2.12-3.2.3.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\javassist-3.25.0-GA.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\hadoop-yarn-server-common-2.7.4.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\kryo-shaded-4.0.2.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\gson-2.2.4.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\zookeeper-3.6.2.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\chill-java-0.10.0.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\jul-to-slf4j-1.7.30.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\kubernetes-model-apps-5.4.1.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\spire-macros_2.12-0.17.0.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\spark-mllib_2.12-3.2.3.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\dropwizard-metrics-hadoop-metrics2-reporter-0.1.2.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\kubernetes-model-metrics-5.4.1.jar":"System Classpath","C:\\spark-3.2.3-bin-hadoop2.7\\jars\\commons-codec-1.15.jar":"System Classpath"}}
{"Event":"SparkListenerApplicationStart","App Name":"spark_basic","App ID":"local-1674028009493","Timestamp":1674028006275,"User":"zq_sl"}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":0,"description":"csv at NativeMethodAccessorImpl.java:0","details":"org.apache.spark.sql.DataFrameWriter.csv(DataFrameWriter.scala:839)\nsun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.lang.reflect.Method.invoke(Method.java:498)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.lang.Thread.run(Thread.java:748)","physicalPlanDescription":"== Physical Plan ==\nExecute InsertIntoHadoopFsRelationCommand (12)\n+- AdaptiveSparkPlan (11)\n   +- Union (10)\n      :- Project (8)\n      :  +- BroadcastHashJoin Inner BuildRight (7)\n      :     :- Project (3)\n      :     :  +- Filter (2)\n      :     :     +- Scan csv  (1)\n      :     +- BroadcastExchange (6)\n      :        +- Filter (5)\n      :           +- Scan csv  (4)\n      +- Scan parquet  (9)\n\n\n(1) Scan csv \nOutput [6]: [rank#0, name#1, net_worth#2, bday#3, age#4, nationality#5]\nBatched: false\nLocation: InMemoryFileIndex [file:/C:/Users/zq_sl/Downloads/task_4/3_Spark_Basics/data/top_100_richest.csv]\nPushedFilters: [IsNotNull(net_worth), IsNotNull(age)]\nReadSchema: struct<rank:int,name:string,net_worth:string,bday:string,age:int,nationality:string>\n\n(2) Filter\nInput [6]: [rank#0, name#1, net_worth#2, bday#3, age#4, nationality#5]\nCondition : (((isnotnull(net_worth#2) AND (cast(regexp_extract(net_worth#2, ^\\$(\\d+).*$, 1) as int) > 60)) AND isnotnull(age#4)) AND CASE WHEN (nationality#5 = United States of America) THEN true WHEN (nationality#5 = French) THEN true WHEN (nationality#5 = England) THEN true ELSE isnotnull(nationality#5) END)\n\n(3) Project\nOutput [6]: [rank#0, name#1, cast(regexp_extract(net_worth#2, ^\\$(\\d+).*$, 1) as int) AS net_worth#18, bday#3, age#4, CASE WHEN (nationality#5 = United States of America) THEN United States WHEN (nationality#5 = French) THEN France WHEN (nationality#5 = England) THEN United Kingdom ELSE nationality#5 END AS nationality#25]\nInput [6]: [rank#0, name#1, net_worth#2, bday#3, age#4, nationality#5]\n\n(4) Scan csv \nOutput [1]: [country#12]\nBatched: false\nLocation: InMemoryFileIndex [file:/C:/Users/zq_sl/Downloads/task_4/3_Spark_Basics/data/wiki_number_of_billionaires.csv]\nPushedFilters: [IsNotNull(country)]\nReadSchema: struct<country:string>\n\n(5) Filter\nInput [1]: [country#12]\nCondition : isnotnull(country#12)\n\n(6) BroadcastExchange\nInput [1]: [country#12]\nArguments: HashedRelationBroadcastMode(List(input[0, string, false]),false), [plan_id=39]\n\n(7) BroadcastHashJoin\nLeft keys [1]: [nationality#25]\nRight keys [1]: [country#12]\nJoin condition: None\n\n(8) Project\nOutput [6]: [rank#0, name#1, cast(net_worth#18 as string) AS net_worth#68, bday#3, age#4, nationality#25]\nInput [7]: [rank#0, name#1, net_worth#18, bday#3, age#4, nationality#25, country#12]\n\n(9) Scan parquet \nOutput [6]: [rank#56, name#57, net_worth#58, bday#59, age#60, nationality#61]\nBatched: true\nLocation: InMemoryFileIndex [file:/C:/Users/zq_sl/Downloads/task_4/3_Spark_Basics/data_parquet]\nPartitionFilters: [isnotnull(nationality#61), (nationality#61 = Russia)]\nReadSchema: struct<rank:int,name:string,net_worth:string,bday:string,age:int>\n\n(10) Union\n\n(11) AdaptiveSparkPlan\nOutput [6]: [rank#0, name#1, net_worth#68, bday#3, age#4, nationality#25]\nArguments: isFinalPlan=false\n\n(12) Execute InsertIntoHadoopFsRelationCommand\nInput [6]: [rank#0, name#1, net_worth#68, bday#3, age#4, nationality#25]\nArguments: file:/C:/Users/zq_sl/Downloads/task_4/3_Spark_Basics/1.csv, false, CSV, [header=true, path=1.csv], Overwrite, [rank, name, net_worth, bday, age, nationality]\n\n","sparkPlanInfo":{"nodeName":"Execute InsertIntoHadoopFsRelationCommand","simpleString":"Execute InsertIntoHadoopFsRelationCommand file:/C:/Users/zq_sl/Downloads/task_4/3_Spark_Basics/1.csv, false, CSV, [header=true, path=1.csv], Overwrite, [rank, name, net_worth, bday, age, nationality]","children":[{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"Union","simpleString":"Union","children":[{"nodeName":"Project","simpleString":"Project [rank#0, name#1, cast(net_worth#18 as string) AS net_worth#68, bday#3, age#4, nationality#25]","children":[{"nodeName":"BroadcastHashJoin","simpleString":"BroadcastHashJoin [nationality#25], [country#12], Inner, BuildRight, false","children":[{"nodeName":"Project","simpleString":"Project [rank#0, name#1, cast(regexp_extract(net_worth#2, ^\\$(\\d+).*$, 1) as int) AS net_worth#18, bday#3, age#4, CASE WHEN (nationality#5 = United States of America) THEN United States WHEN (nationality#5 = French) THEN France WHEN (nationality#5 = England) THEN United Kingdom ELSE nationality#5 END AS nationality#25]","children":[{"nodeName":"Filter","simpleString":"Filter (((isnotnull(net_worth#2) AND (cast(regexp_extract(net_worth#2, ^\\$(\\d+).*$, 1) as int) > 60)) AND isnotnull(age#4)) AND CASE WHEN (nationality#5 = United States of America) THEN true WHEN (nationality#5 = French) THEN true WHEN (nationality#5 = England) THEN true ELSE isnotnull(nationality#5) END)","children":[{"nodeName":"Scan csv ","simpleString":"FileScan csv [rank#0,name#1,net_worth#2,bday#3,age#4,nationality#5] Batched: false, DataFilters: [isnotnull(net_worth#2), (cast(regexp_extract(net_worth#2, ^\\$(\\d+).*$, 1) as int) > 60), isnotnu..., Format: CSV, Location: InMemoryFileIndex(1 paths)[file:/C:/Users/zq_sl/Downloads/task_4/3_Spark_Basics/data/top_100_rich..., PartitionFilters: [], PushedFilters: [IsNotNull(net_worth), IsNotNull(age)], ReadSchema: struct<rank:int,name:string,net_worth:string,bday:string,age:int,nationality:string>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[file:/C:/Users/zq_sl/Downloads/task_4/3_Spark_Basics/data/top_100_richest.csv]","ReadSchema":"struct<rank:int,name:string,net_worth:string,bday:string,age:int,nationality:string>","Format":"CSV","Batched":"false","PartitionFilters":"[]","PushedFilters":"[IsNotNull(net_worth), IsNotNull(age)]","DataFilters":"[isnotnull(net_worth#2), (cast(regexp_extract(net_worth#2, ^\\$(\\d+).*$, 1) as int) > 60), isnotnull(age#4), CASE WHEN (nationality#5 = United States of America) THEN true WHEN (nationality#5 = French) THEN true WHEN (nationality#5 = England) THEN true ELSE isnotnull(nationality#5) END]"},"metrics":[{"name":"number of output rows","accumulatorId":9,"metricType":"sum"},{"name":"number of files read","accumulatorId":10,"metricType":"sum"},{"name":"metadata time","accumulatorId":11,"metricType":"timing"},{"name":"size of files read","accumulatorId":12,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":8,"metricType":"sum"}]}],"metadata":{},"metrics":[]},{"nodeName":"BroadcastExchange","simpleString":"BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, false]),false), [plan_id=39]","children":[{"nodeName":"Filter","simpleString":"Filter isnotnull(country#12)","children":[{"nodeName":"Scan csv ","simpleString":"FileScan csv [country#12] Batched: false, DataFilters: [isnotnull(country#12)], Format: CSV, Location: InMemoryFileIndex(1 paths)[file:/C:/Users/zq_sl/Downloads/task_4/3_Spark_Basics/data/wiki_number_..., PartitionFilters: [], PushedFilters: [IsNotNull(country)], ReadSchema: struct<country:string>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[file:/C:/Users/zq_sl/Downloads/task_4/3_Spark_Basics/data/wiki_number_of_billionaires.csv]","ReadSchema":"struct<country:string>","Format":"CSV","Batched":"false","PartitionFilters":"[]","PushedFilters":"[IsNotNull(country)]","DataFilters":"[isnotnull(country#12)]"},"metrics":[{"name":"number of output rows","accumulatorId":19,"metricType":"sum"},{"name":"number of files read","accumulatorId":20,"metricType":"sum"},{"name":"metadata time","accumulatorId":21,"metricType":"timing"},{"name":"size of files read","accumulatorId":22,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":18,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"time to broadcast","accumulatorId":17,"metricType":"timing"},{"name":"time to build","accumulatorId":16,"metricType":"timing"},{"name":"time to collect","accumulatorId":15,"metricType":"timing"},{"name":"number of output rows","accumulatorId":14,"metricType":"sum"},{"name":"data size","accumulatorId":13,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":7,"metricType":"sum"}]}],"metadata":{},"metrics":[]},{"nodeName":"Scan parquet ","simpleString":"FileScan parquet [rank#56,name#57,net_worth#58,bday#59,age#60,nationality#61] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/C:/Users/zq_sl/Downloads/task_4/3_Spark_Basics/data_parquet], PartitionFilters: [isnotnull(nationality#61), (nationality#61 = Russia)], PushedFilters: [], ReadSchema: struct<rank:int,name:string,net_worth:string,bday:string,age:int>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[file:/C:/Users/zq_sl/Downloads/task_4/3_Spark_Basics/data_parquet]","ReadSchema":"struct<rank:int,name:string,net_worth:string,bday:string,age:int>","Format":"Parquet","Batched":"true","PartitionFilters":"[isnotnull(nationality#61), (nationality#61 = Russia)]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of files read","accumulatorId":24,"metricType":"sum"},{"name":"scan time","accumulatorId":27,"metricType":"timing"},{"name":"dynamic partition pruning time","accumulatorId":29,"metricType":"timing"},{"name":"metadata time","accumulatorId":25,"metricType":"timing"},{"name":"size of files read","accumulatorId":26,"metricType":"size"},{"name":"number of output rows","accumulatorId":23,"metricType":"sum"},{"name":"number of partitions read","accumulatorId":28,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"task commit time","accumulatorId":5,"metricType":"timing"},{"name":"number of written files","accumulatorId":1,"metricType":"sum"},{"name":"job commit time","accumulatorId":6,"metricType":"timing"},{"name":"number of output rows","accumulatorId":3,"metricType":"sum"},{"name":"number of dynamic part","accumulatorId":4,"metricType":"sum"},{"name":"written output","accumulatorId":2,"metricType":"size"}]},"time":1674028031545}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":0,"physicalPlanDescription":"== Physical Plan ==\nExecute InsertIntoHadoopFsRelationCommand (18)\n+- AdaptiveSparkPlan (17)\n   +- == Current Plan ==\n      Union (11)\n      :- Project (9)\n      :  +- BroadcastHashJoin Inner BuildRight (8)\n      :     :- Project (3)\n      :     :  +- Filter (2)\n      :     :     +- Scan csv  (1)\n      :     +- BroadcastQueryStage (7)\n      :        +- BroadcastExchange (6)\n      :           +- * Filter (5)\n      :              +- Scan csv  (4)\n      +- Scan parquet  (10)\n   +- == Initial Plan ==\n      Union (16)\n      :- Project (15)\n      :  +- BroadcastHashJoin Inner BuildRight (14)\n      :     :- Project (3)\n      :     :  +- Filter (2)\n      :     :     +- Scan csv  (1)\n      :     +- BroadcastExchange (13)\n      :        +- Filter (12)\n      :           +- Scan csv  (4)\n      +- Scan parquet  (10)\n\n\n(1) Scan csv \nOutput [6]: [rank#0, name#1, net_worth#2, bday#3, age#4, nationality#5]\nBatched: false\nLocation: InMemoryFileIndex [file:/C:/Users/zq_sl/Downloads/task_4/3_Spark_Basics/data/top_100_richest.csv]\nPushedFilters: [IsNotNull(net_worth), IsNotNull(age)]\nReadSchema: struct<rank:int,name:string,net_worth:string,bday:string,age:int,nationality:string>\n\n(2) Filter\nInput [6]: [rank#0, name#1, net_worth#2, bday#3, age#4, nationality#5]\nCondition : (((isnotnull(net_worth#2) AND (cast(regexp_extract(net_worth#2, ^\\$(\\d+).*$, 1) as int) > 60)) AND isnotnull(age#4)) AND CASE WHEN (nationality#5 = United States of America) THEN true WHEN (nationality#5 = French) THEN true WHEN (nationality#5 = England) THEN true ELSE isnotnull(nationality#5) END)\n\n(3) Project\nOutput [6]: [rank#0, name#1, cast(regexp_extract(net_worth#2, ^\\$(\\d+).*$, 1) as int) AS net_worth#18, bday#3, age#4, CASE WHEN (nationality#5 = United States of America) THEN United States WHEN (nationality#5 = French) THEN France WHEN (nationality#5 = England) THEN United Kingdom ELSE nationality#5 END AS nationality#25]\nInput [6]: [rank#0, name#1, net_worth#2, bday#3, age#4, nationality#5]\n\n(4) Scan csv \nOutput [1]: [country#12]\nBatched: false\nLocation: InMemoryFileIndex [file:/C:/Users/zq_sl/Downloads/task_4/3_Spark_Basics/data/wiki_number_of_billionaires.csv]\nPushedFilters: [IsNotNull(country)]\nReadSchema: struct<country:string>\n\n(5) Filter [codegen id : 1]\nInput [1]: [country#12]\nCondition : isnotnull(country#12)\n\n(6) BroadcastExchange\nInput [1]: [country#12]\nArguments: HashedRelationBroadcastMode(List(input[0, string, false]),false), [plan_id=51]\n\n(7) BroadcastQueryStage\nOutput [1]: [country#12]\nArguments: 0\n\n(8) BroadcastHashJoin\nLeft keys [1]: [nationality#25]\nRight keys [1]: [country#12]\nJoin condition: None\n\n(9) Project\nOutput [6]: [rank#0, name#1, cast(net_worth#18 as string) AS net_worth#68, bday#3, age#4, nationality#25]\nInput [7]: [rank#0, name#1, net_worth#18, bday#3, age#4, nationality#25, country#12]\n\n(10) Scan parquet \nOutput [6]: [rank#56, name#57, net_worth#58, bday#59, age#60, nationality#61]\nBatched: true\nLocation: InMemoryFileIndex [file:/C:/Users/zq_sl/Downloads/task_4/3_Spark_Basics/data_parquet]\nPartitionFilters: [isnotnull(nationality#61), (nationality#61 = Russia)]\nReadSchema: struct<rank:int,name:string,net_worth:string,bday:string,age:int>\n\n(11) Union\n\n(12) Filter\nInput [1]: [country#12]\nCondition : isnotnull(country#12)\n\n(13) BroadcastExchange\nInput [1]: [country#12]\nArguments: HashedRelationBroadcastMode(List(input[0, string, false]),false), [plan_id=39]\n\n(14) BroadcastHashJoin\nLeft keys [1]: [nationality#25]\nRight keys [1]: [country#12]\nJoin condition: None\n\n(15) Project\nOutput [6]: [rank#0, name#1, cast(net_worth#18 as string) AS net_worth#68, bday#3, age#4, nationality#25]\nInput [7]: [rank#0, name#1, net_worth#18, bday#3, age#4, nationality#25, country#12]\n\n(16) Union\n\n(17) AdaptiveSparkPlan\nOutput [6]: [rank#0, name#1, net_worth#68, bday#3, age#4, nationality#25]\nArguments: isFinalPlan=false\n\n(18) Execute InsertIntoHadoopFsRelationCommand\nInput [6]: [rank#0, name#1, net_worth#68, bday#3, age#4, nationality#25]\nArguments: file:/C:/Users/zq_sl/Downloads/task_4/3_Spark_Basics/1.csv, false, CSV, [header=true, path=1.csv], Overwrite, [rank, name, net_worth, bday, age, nationality]\n\n","sparkPlanInfo":{"nodeName":"Execute InsertIntoHadoopFsRelationCommand","simpleString":"Execute InsertIntoHadoopFsRelationCommand file:/C:/Users/zq_sl/Downloads/task_4/3_Spark_Basics/1.csv, false, CSV, [header=true, path=1.csv], Overwrite, [rank, name, net_worth, bday, age, nationality]","children":[{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"Union","simpleString":"Union","children":[{"nodeName":"Project","simpleString":"Project [rank#0, name#1, cast(net_worth#18 as string) AS net_worth#68, bday#3, age#4, nationality#25]","children":[{"nodeName":"BroadcastHashJoin","simpleString":"BroadcastHashJoin [nationality#25], [country#12], Inner, BuildRight, false","children":[{"nodeName":"Project","simpleString":"Project [rank#0, name#1, cast(regexp_extract(net_worth#2, ^\\$(\\d+).*$, 1) as int) AS net_worth#18, bday#3, age#4, CASE WHEN (nationality#5 = United States of America) THEN United States WHEN (nationality#5 = French) THEN France WHEN (nationality#5 = England) THEN United Kingdom ELSE nationality#5 END AS nationality#25]","children":[{"nodeName":"Filter","simpleString":"Filter (((isnotnull(net_worth#2) AND (cast(regexp_extract(net_worth#2, ^\\$(\\d+).*$, 1) as int) > 60)) AND isnotnull(age#4)) AND CASE WHEN (nationality#5 = United States of America) THEN true WHEN (nationality#5 = French) THEN true WHEN (nationality#5 = England) THEN true ELSE isnotnull(nationality#5) END)","children":[{"nodeName":"Scan csv ","simpleString":"FileScan csv [rank#0,name#1,net_worth#2,bday#3,age#4,nationality#5] Batched: false, DataFilters: [isnotnull(net_worth#2), (cast(regexp_extract(net_worth#2, ^\\$(\\d+).*$, 1) as int) > 60), isnotnu..., Format: CSV, Location: InMemoryFileIndex(1 paths)[file:/C:/Users/zq_sl/Downloads/task_4/3_Spark_Basics/data/top_100_rich..., PartitionFilters: [], PushedFilters: [IsNotNull(net_worth), IsNotNull(age)], ReadSchema: struct<rank:int,name:string,net_worth:string,bday:string,age:int,nationality:string>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[file:/C:/Users/zq_sl/Downloads/task_4/3_Spark_Basics/data/top_100_richest.csv]","ReadSchema":"struct<rank:int,name:string,net_worth:string,bday:string,age:int,nationality:string>","Format":"CSV","Batched":"false","PartitionFilters":"[]","PushedFilters":"[IsNotNull(net_worth), IsNotNull(age)]","DataFilters":"[isnotnull(net_worth#2), (cast(regexp_extract(net_worth#2, ^\\$(\\d+).*$, 1) as int) > 60), isnotnull(age#4), CASE WHEN (nationality#5 = United States of America) THEN true WHEN (nationality#5 = French) THEN true WHEN (nationality#5 = England) THEN true ELSE isnotnull(nationality#5) END]"},"metrics":[{"name":"number of output rows","accumulatorId":9,"metricType":"sum"},{"name":"number of files read","accumulatorId":10,"metricType":"sum"},{"name":"metadata time","accumulatorId":11,"metricType":"timing"},{"name":"size of files read","accumulatorId":12,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":8,"metricType":"sum"}]}],"metadata":{},"metrics":[]},{"nodeName":"BroadcastQueryStage","simpleString":"BroadcastQueryStage 0","children":[{"nodeName":"BroadcastExchange","simpleString":"BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, false]),false), [plan_id=51]","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Filter","simpleString":"Filter isnotnull(country#12)","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan csv ","simpleString":"FileScan csv [country#12] Batched: false, DataFilters: [isnotnull(country#12)], Format: CSV, Location: InMemoryFileIndex(1 paths)[file:/C:/Users/zq_sl/Downloads/task_4/3_Spark_Basics/data/wiki_number_..., PartitionFilters: [], PushedFilters: [IsNotNull(country)], ReadSchema: struct<country:string>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[file:/C:/Users/zq_sl/Downloads/task_4/3_Spark_Basics/data/wiki_number_of_billionaires.csv]","ReadSchema":"struct<country:string>","Format":"CSV","Batched":"false","PartitionFilters":"[]","PushedFilters":"[IsNotNull(country)]","DataFilters":"[isnotnull(country#12)]"},"metrics":[{"name":"number of output rows","accumulatorId":19,"metricType":"sum"},{"name":"number of files read","accumulatorId":20,"metricType":"sum"},{"name":"metadata time","accumulatorId":21,"metricType":"timing"},{"name":"size of files read","accumulatorId":22,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":37,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":36,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"time to broadcast","accumulatorId":35,"metricType":"timing"},{"name":"time to build","accumulatorId":34,"metricType":"timing"},{"name":"time to collect","accumulatorId":33,"metricType":"timing"},{"name":"number of output rows","accumulatorId":32,"metricType":"sum"},{"name":"data size","accumulatorId":31,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":30,"metricType":"sum"}]}],"metadata":{},"metrics":[]},{"nodeName":"Scan parquet ","simpleString":"FileScan parquet [rank#56,name#57,net_worth#58,bday#59,age#60,nationality#61] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/C:/Users/zq_sl/Downloads/task_4/3_Spark_Basics/data_parquet], PartitionFilters: [isnotnull(nationality#61), (nationality#61 = Russia)], PushedFilters: [], ReadSchema: struct<rank:int,name:string,net_worth:string,bday:string,age:int>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[file:/C:/Users/zq_sl/Downloads/task_4/3_Spark_Basics/data_parquet]","ReadSchema":"struct<rank:int,name:string,net_worth:string,bday:string,age:int>","Format":"Parquet","Batched":"true","PartitionFilters":"[isnotnull(nationality#61), (nationality#61 = Russia)]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of files read","accumulatorId":24,"metricType":"sum"},{"name":"scan time","accumulatorId":27,"metricType":"timing"},{"name":"dynamic partition pruning time","accumulatorId":29,"metricType":"timing"},{"name":"metadata time","accumulatorId":25,"metricType":"timing"},{"name":"size of files read","accumulatorId":26,"metricType":"size"},{"name":"number of output rows","accumulatorId":23,"metricType":"sum"},{"name":"number of partitions read","accumulatorId":28,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"task commit time","accumulatorId":5,"metricType":"timing"},{"name":"number of written files","accumulatorId":1,"metricType":"sum"},{"name":"job commit time","accumulatorId":6,"metricType":"timing"},{"name":"number of output rows","accumulatorId":3,"metricType":"sum"},{"name":"number of dynamic part","accumulatorId":4,"metricType":"sum"},{"name":"written output","accumulatorId":2,"metricType":"size"}]}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":0,"accumUpdates":[[20,1],[21,5],[22,1461]]}
{"Event":"SparkListenerJobStart","Job ID":0,"Submission Time":1674028035388,"Stage Infos":[{"Stage ID":0,"Stage Attempt ID":0,"Stage Name":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:266","Number of Tasks":1,"RDD Info":[{"RDD ID":3,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"0\",\"name\":\"BroadcastExchange\"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:266","Parent IDs":[2],"Storage Level":{"Use Disk":false,"Use Memory":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":0,"Name":"FileScanRDD","Scope":"{\"id\":\"4\",\"name\":\"Scan csv \"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:266","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":1,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"4\",\"name\":\"Scan csv \"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:266","Parent IDs":[0],"Storage Level":{"Use Disk":false,"Use Memory":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":2,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"1\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:266","Parent IDs":[1],"Storage Level":{"Use Disk":false,"Use Memory":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.execution.SQLExecution$.$anonfun$withThreadLocalCaptured$1(SQLExecution.scala:185)\njava.util.concurrent.FutureTask.run(FutureTask.java:266)\njava.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\njava.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\njava.lang.Thread.run(Thread.java:748)","Accumulables":[],"Resource Profile Id":0}],"Stage IDs":[0],"Properties":{"spark.sql.warehouse.dir":"file:/C:/Users/zq_sl/Downloads/task_4/3_Spark_Basics/spark-warehouse","spark.driver.host":"DESKTOP-CH1A60P","spark.serializer.objectStreamReset":"100","spark.history.fs.logDirectory":"file:///C:/Users/zq_sl/Downloads/task_4/for_history","spark.eventLog.enabled":"true","spark.job.interruptOnCancel":"true","spark.driver.port":"58112","spark.rdd.compress":"True","spark.app.name":"spark_basic","spark.rdd.scope":"{\"id\":\"0\",\"name\":\"BroadcastExchange\"}","spark.rdd.scope.noOverride":"true","spark.submit.pyFiles":"","spark.ui.showConsoleProgress":"true","spark.job.description":"broadcast exchange (runId b545f5a6-b4d0-431a-9ab6-65089536d1c3)","spark.app.startTime":"1674028006275","spark.executor.id":"driver","spark.jobGroup.id":"b545f5a6-b4d0-431a-9ab6-65089536d1c3","spark.submit.deployMode":"client","spark.master":"local[*]","spark.eventLog.dir":"file:///C:/Users/zq_sl/Downloads/task_4/for_history","spark.sql.execution.id":"0","spark.app.id":"local-1674028009493"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":0,"Stage Attempt ID":0,"Stage Name":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:266","Number of Tasks":1,"RDD Info":[{"RDD ID":3,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"0\",\"name\":\"BroadcastExchange\"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:266","Parent IDs":[2],"Storage Level":{"Use Disk":false,"Use Memory":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":0,"Name":"FileScanRDD","Scope":"{\"id\":\"4\",\"name\":\"Scan csv \"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:266","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":1,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"4\",\"name\":\"Scan csv \"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:266","Parent IDs":[0],"Storage Level":{"Use Disk":false,"Use Memory":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":2,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"1\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:266","Parent IDs":[1],"Storage Level":{"Use Disk":false,"Use Memory":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.execution.SQLExecution$.$anonfun$withThreadLocalCaptured$1(SQLExecution.scala:185)\njava.util.concurrent.FutureTask.run(FutureTask.java:266)\njava.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\njava.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\njava.lang.Thread.run(Thread.java:748)","Submission Time":1674028035496,"Accumulables":[],"Resource Profile Id":0},"Properties":{"spark.sql.warehouse.dir":"file:/C:/Users/zq_sl/Downloads/task_4/3_Spark_Basics/spark-warehouse","spark.driver.host":"DESKTOP-CH1A60P","spark.serializer.objectStreamReset":"100","spark.history.fs.logDirectory":"file:///C:/Users/zq_sl/Downloads/task_4/for_history","spark.eventLog.enabled":"true","spark.job.interruptOnCancel":"true","spark.driver.port":"58112","spark.rdd.compress":"True","spark.app.name":"spark_basic","spark.rdd.scope":"{\"id\":\"0\",\"name\":\"BroadcastExchange\"}","spark.rdd.scope.noOverride":"true","spark.submit.pyFiles":"","spark.ui.showConsoleProgress":"true","spark.job.description":"broadcast exchange (runId b545f5a6-b4d0-431a-9ab6-65089536d1c3)","spark.app.startTime":"1674028006275","spark.executor.id":"driver","spark.jobGroup.id":"b545f5a6-b4d0-431a-9ab6-65089536d1c3","spark.submit.deployMode":"client","spark.master":"local[*]","spark.eventLog.dir":"file:///C:/Users/zq_sl/Downloads/task_4/for_history","spark.sql.execution.id":"0","spark.app.id":"local-1674028009493"}}
{"Event":"SparkListenerTaskStart","Stage ID":0,"Stage Attempt ID":0,"Task Info":{"Task ID":0,"Index":0,"Attempt":0,"Launch Time":1674028035764,"Executor ID":"driver","Host":"DESKTOP-CH1A60P","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":0,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":0,"Index":0,"Attempt":0,"Launch Time":1674028035764,"Executor ID":"driver","Host":"DESKTOP-CH1A60P","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1674028037474,"Failed":false,"Killed":false,"Accumulables":[{"ID":19,"Name":"number of output rows","Update":"77","Value":"77","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":36,"Name":"duration","Update":"538","Value":"538","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":37,"Name":"number of output rows","Update":"77","Value":"77","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":38,"Name":"internal.metrics.executorDeserializeTime","Update":712,"Value":712,"Internal":true,"Count Failed Values":true},{"ID":39,"Name":"internal.metrics.executorDeserializeCpuTime","Update":531250000,"Value":531250000,"Internal":true,"Count Failed Values":true},{"ID":40,"Name":"internal.metrics.executorRunTime","Update":786,"Value":786,"Internal":true,"Count Failed Values":true},{"ID":41,"Name":"internal.metrics.executorCpuTime","Update":406250000,"Value":406250000,"Internal":true,"Count Failed Values":true},{"ID":42,"Name":"internal.metrics.resultSize","Update":2714,"Value":2714,"Internal":true,"Count Failed Values":true},{"ID":44,"Name":"internal.metrics.resultSerializationTime","Update":1,"Value":1,"Internal":true,"Count Failed Values":true},{"ID":59,"Name":"internal.metrics.input.bytesRead","Update":1461,"Value":1461,"Internal":true,"Count Failed Values":true},{"ID":60,"Name":"internal.metrics.input.recordsRead","Update":77,"Value":77,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0},"Task Metrics":{"Executor Deserialize Time":712,"Executor Deserialize CPU Time":531250000,"Executor Run Time":786,"Executor CPU Time":406250000,"Peak Execution Memory":0,"Result Size":2714,"JVM GC Time":0,"Result Serialization Time":1,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":1461,"Records Read":77},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":0,"Stage Attempt ID":0,"Stage Name":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:266","Number of Tasks":1,"RDD Info":[{"RDD ID":3,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"0\",\"name\":\"BroadcastExchange\"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:266","Parent IDs":[2],"Storage Level":{"Use Disk":false,"Use Memory":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":0,"Name":"FileScanRDD","Scope":"{\"id\":\"4\",\"name\":\"Scan csv \"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:266","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":1,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"4\",\"name\":\"Scan csv \"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:266","Parent IDs":[0],"Storage Level":{"Use Disk":false,"Use Memory":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":2,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"1\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:266","Parent IDs":[1],"Storage Level":{"Use Disk":false,"Use Memory":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.execution.SQLExecution$.$anonfun$withThreadLocalCaptured$1(SQLExecution.scala:185)\njava.util.concurrent.FutureTask.run(FutureTask.java:266)\njava.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\njava.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\njava.lang.Thread.run(Thread.java:748)","Submission Time":1674028035496,"Completion Time":1674028037543,"Accumulables":[{"ID":19,"Name":"number of output rows","Value":"77","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":36,"Name":"duration","Value":"538","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":37,"Name":"number of output rows","Value":"77","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":38,"Name":"internal.metrics.executorDeserializeTime","Value":712,"Internal":true,"Count Failed Values":true},{"ID":39,"Name":"internal.metrics.executorDeserializeCpuTime","Value":531250000,"Internal":true,"Count Failed Values":true},{"ID":40,"Name":"internal.metrics.executorRunTime","Value":786,"Internal":true,"Count Failed Values":true},{"ID":41,"Name":"internal.metrics.executorCpuTime","Value":406250000,"Internal":true,"Count Failed Values":true},{"ID":42,"Name":"internal.metrics.resultSize","Value":2714,"Internal":true,"Count Failed Values":true},{"ID":44,"Name":"internal.metrics.resultSerializationTime","Value":1,"Internal":true,"Count Failed Values":true},{"ID":59,"Name":"internal.metrics.input.bytesRead","Value":1461,"Internal":true,"Count Failed Values":true},{"ID":60,"Name":"internal.metrics.input.recordsRead","Value":77,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0}}
{"Event":"SparkListenerJobEnd","Job ID":0,"Completion Time":1674028037551,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":0,"accumUpdates":[[35,18],[34,114],[33,5297],[32,77],[31,4198400]]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":0,"physicalPlanDescription":"== Physical Plan ==\nExecute InsertIntoHadoopFsRelationCommand (21)\n+- AdaptiveSparkPlan (20)\n   +- == Final Plan ==\n      Union (12)\n      :- * Project (9)\n      :  +- * BroadcastHashJoin Inner BuildRight (8)\n      :     :- * Project (3)\n      :     :  +- * Filter (2)\n      :     :     +- Scan csv  (1)\n      :     +- BroadcastQueryStage (7)\n      :        +- BroadcastExchange (6)\n      :           +- * Filter (5)\n      :              +- Scan csv  (4)\n      +- * ColumnarToRow (11)\n         +- Scan parquet  (10)\n   +- == Initial Plan ==\n      Union (19)\n      :- Project (18)\n      :  +- BroadcastHashJoin Inner BuildRight (17)\n      :     :- Project (14)\n      :     :  +- Filter (13)\n      :     :     +- Scan csv  (1)\n      :     +- BroadcastExchange (16)\n      :        +- Filter (15)\n      :           +- Scan csv  (4)\n      +- Scan parquet  (10)\n\n\n(1) Scan csv \nOutput [6]: [rank#0, name#1, net_worth#2, bday#3, age#4, nationality#5]\nBatched: false\nLocation: InMemoryFileIndex [file:/C:/Users/zq_sl/Downloads/task_4/3_Spark_Basics/data/top_100_richest.csv]\nPushedFilters: [IsNotNull(net_worth), IsNotNull(age)]\nReadSchema: struct<rank:int,name:string,net_worth:string,bday:string,age:int,nationality:string>\n\n(2) Filter [codegen id : 2]\nInput [6]: [rank#0, name#1, net_worth#2, bday#3, age#4, nationality#5]\nCondition : (((isnotnull(net_worth#2) AND (cast(regexp_extract(net_worth#2, ^\\$(\\d+).*$, 1) as int) > 60)) AND isnotnull(age#4)) AND CASE WHEN (nationality#5 = United States of America) THEN true WHEN (nationality#5 = French) THEN true WHEN (nationality#5 = England) THEN true ELSE isnotnull(nationality#5) END)\n\n(3) Project [codegen id : 2]\nOutput [6]: [rank#0, name#1, cast(regexp_extract(net_worth#2, ^\\$(\\d+).*$, 1) as int) AS net_worth#18, bday#3, age#4, CASE WHEN (nationality#5 = United States of America) THEN United States WHEN (nationality#5 = French) THEN France WHEN (nationality#5 = England) THEN United Kingdom ELSE nationality#5 END AS nationality#25]\nInput [6]: [rank#0, name#1, net_worth#2, bday#3, age#4, nationality#5]\n\n(4) Scan csv \nOutput [1]: [country#12]\nBatched: false\nLocation: InMemoryFileIndex [file:/C:/Users/zq_sl/Downloads/task_4/3_Spark_Basics/data/wiki_number_of_billionaires.csv]\nPushedFilters: [IsNotNull(country)]\nReadSchema: struct<country:string>\n\n(5) Filter [codegen id : 1]\nInput [1]: [country#12]\nCondition : isnotnull(country#12)\n\n(6) BroadcastExchange\nInput [1]: [country#12]\nArguments: HashedRelationBroadcastMode(List(input[0, string, false]),false), [plan_id=51]\n\n(7) BroadcastQueryStage\nOutput [1]: [country#12]\nArguments: 0\n\n(8) BroadcastHashJoin [codegen id : 2]\nLeft keys [1]: [nationality#25]\nRight keys [1]: [country#12]\nJoin condition: None\n\n(9) Project [codegen id : 2]\nOutput [6]: [rank#0, name#1, cast(net_worth#18 as string) AS net_worth#68, bday#3, age#4, nationality#25]\nInput [7]: [rank#0, name#1, net_worth#18, bday#3, age#4, nationality#25, country#12]\n\n(10) Scan parquet \nOutput [6]: [rank#56, name#57, net_worth#58, bday#59, age#60, nationality#61]\nBatched: true\nLocation: InMemoryFileIndex [file:/C:/Users/zq_sl/Downloads/task_4/3_Spark_Basics/data_parquet]\nPartitionFilters: [isnotnull(nationality#61), (nationality#61 = Russia)]\nReadSchema: struct<rank:int,name:string,net_worth:string,bday:string,age:int>\n\n(11) ColumnarToRow [codegen id : 3]\nInput [6]: [rank#56, name#57, net_worth#58, bday#59, age#60, nationality#61]\n\n(12) Union\n\n(13) Filter\nInput [6]: [rank#0, name#1, net_worth#2, bday#3, age#4, nationality#5]\nCondition : (((isnotnull(net_worth#2) AND (cast(regexp_extract(net_worth#2, ^\\$(\\d+).*$, 1) as int) > 60)) AND isnotnull(age#4)) AND CASE WHEN (nationality#5 = United States of America) THEN true WHEN (nationality#5 = French) THEN true WHEN (nationality#5 = England) THEN true ELSE isnotnull(nationality#5) END)\n\n(14) Project\nOutput [6]: [rank#0, name#1, cast(regexp_extract(net_worth#2, ^\\$(\\d+).*$, 1) as int) AS net_worth#18, bday#3, age#4, CASE WHEN (nationality#5 = United States of America) THEN United States WHEN (nationality#5 = French) THEN France WHEN (nationality#5 = England) THEN United Kingdom ELSE nationality#5 END AS nationality#25]\nInput [6]: [rank#0, name#1, net_worth#2, bday#3, age#4, nationality#5]\n\n(15) Filter\nInput [1]: [country#12]\nCondition : isnotnull(country#12)\n\n(16) BroadcastExchange\nInput [1]: [country#12]\nArguments: HashedRelationBroadcastMode(List(input[0, string, false]),false), [plan_id=39]\n\n(17) BroadcastHashJoin\nLeft keys [1]: [nationality#25]\nRight keys [1]: [country#12]\nJoin condition: None\n\n(18) Project\nOutput [6]: [rank#0, name#1, cast(net_worth#18 as string) AS net_worth#68, bday#3, age#4, nationality#25]\nInput [7]: [rank#0, name#1, net_worth#18, bday#3, age#4, nationality#25, country#12]\n\n(19) Union\n\n(20) AdaptiveSparkPlan\nOutput [6]: [rank#0, name#1, net_worth#68, bday#3, age#4, nationality#25]\nArguments: isFinalPlan=true\n\n(21) Execute InsertIntoHadoopFsRelationCommand\nInput [6]: [rank#0, name#1, net_worth#68, bday#3, age#4, nationality#25]\nArguments: file:/C:/Users/zq_sl/Downloads/task_4/3_Spark_Basics/1.csv, false, CSV, [header=true, path=1.csv], Overwrite, [rank, name, net_worth, bday, age, nationality]\n\n","sparkPlanInfo":{"nodeName":"Execute InsertIntoHadoopFsRelationCommand","simpleString":"Execute InsertIntoHadoopFsRelationCommand file:/C:/Users/zq_sl/Downloads/task_4/3_Spark_Basics/1.csv, false, CSV, [header=true, path=1.csv], Overwrite, [rank, name, net_worth, bday, age, nationality]","children":[{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=true","children":[{"nodeName":"Union","simpleString":"Union","children":[{"nodeName":"WholeStageCodegen (2)","simpleString":"WholeStageCodegen (2)","children":[{"nodeName":"Project","simpleString":"Project [rank#0, name#1, cast(net_worth#18 as string) AS net_worth#68, bday#3, age#4, nationality#25]","children":[{"nodeName":"BroadcastHashJoin","simpleString":"BroadcastHashJoin [nationality#25], [country#12], Inner, BuildRight, false","children":[{"nodeName":"Project","simpleString":"Project [rank#0, name#1, cast(regexp_extract(net_worth#2, ^\\$(\\d+).*$, 1) as int) AS net_worth#18, bday#3, age#4, CASE WHEN (nationality#5 = United States of America) THEN United States WHEN (nationality#5 = French) THEN France WHEN (nationality#5 = England) THEN United Kingdom ELSE nationality#5 END AS nationality#25]","children":[{"nodeName":"Filter","simpleString":"Filter (((isnotnull(net_worth#2) AND (cast(regexp_extract(net_worth#2, ^\\$(\\d+).*$, 1) as int) > 60)) AND isnotnull(age#4)) AND CASE WHEN (nationality#5 = United States of America) THEN true WHEN (nationality#5 = French) THEN true WHEN (nationality#5 = England) THEN true ELSE isnotnull(nationality#5) END)","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan csv ","simpleString":"FileScan csv [rank#0,name#1,net_worth#2,bday#3,age#4,nationality#5] Batched: false, DataFilters: [isnotnull(net_worth#2), (cast(regexp_extract(net_worth#2, ^\\$(\\d+).*$, 1) as int) > 60), isnotnu..., Format: CSV, Location: InMemoryFileIndex(1 paths)[file:/C:/Users/zq_sl/Downloads/task_4/3_Spark_Basics/data/top_100_rich..., PartitionFilters: [], PushedFilters: [IsNotNull(net_worth), IsNotNull(age)], ReadSchema: struct<rank:int,name:string,net_worth:string,bday:string,age:int,nationality:string>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[file:/C:/Users/zq_sl/Downloads/task_4/3_Spark_Basics/data/top_100_richest.csv]","ReadSchema":"struct<rank:int,name:string,net_worth:string,bday:string,age:int,nationality:string>","Format":"CSV","Batched":"false","PartitionFilters":"[]","PushedFilters":"[IsNotNull(net_worth), IsNotNull(age)]","DataFilters":"[isnotnull(net_worth#2), (cast(regexp_extract(net_worth#2, ^\\$(\\d+).*$, 1) as int) > 60), isnotnull(age#4), CASE WHEN (nationality#5 = United States of America) THEN true WHEN (nationality#5 = French) THEN true WHEN (nationality#5 = England) THEN true ELSE isnotnull(nationality#5) END]"},"metrics":[{"name":"number of output rows","accumulatorId":9,"metricType":"sum"},{"name":"number of files read","accumulatorId":10,"metricType":"sum"},{"name":"metadata time","accumulatorId":11,"metricType":"timing"},{"name":"size of files read","accumulatorId":12,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":65,"metricType":"sum"}]}],"metadata":{},"metrics":[]},{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"BroadcastQueryStage","simpleString":"BroadcastQueryStage 0","children":[{"nodeName":"BroadcastExchange","simpleString":"BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, false]),false), [plan_id=51]","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Filter","simpleString":"Filter isnotnull(country#12)","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan csv ","simpleString":"FileScan csv [country#12] Batched: false, DataFilters: [isnotnull(country#12)], Format: CSV, Location: InMemoryFileIndex(1 paths)[file:/C:/Users/zq_sl/Downloads/task_4/3_Spark_Basics/data/wiki_number_..., PartitionFilters: [], PushedFilters: [IsNotNull(country)], ReadSchema: struct<country:string>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[file:/C:/Users/zq_sl/Downloads/task_4/3_Spark_Basics/data/wiki_number_of_billionaires.csv]","ReadSchema":"struct<country:string>","Format":"CSV","Batched":"false","PartitionFilters":"[]","PushedFilters":"[IsNotNull(country)]","DataFilters":"[isnotnull(country#12)]"},"metrics":[{"name":"number of output rows","accumulatorId":19,"metricType":"sum"},{"name":"number of files read","accumulatorId":20,"metricType":"sum"},{"name":"metadata time","accumulatorId":21,"metricType":"timing"},{"name":"size of files read","accumulatorId":22,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":37,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":36,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"time to broadcast","accumulatorId":35,"metricType":"timing"},{"name":"time to build","accumulatorId":34,"metricType":"timing"},{"name":"time to collect","accumulatorId":33,"metricType":"timing"},{"name":"number of output rows","accumulatorId":32,"metricType":"sum"},{"name":"data size","accumulatorId":31,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":64,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":63,"metricType":"timing"}]},{"nodeName":"WholeStageCodegen (3)","simpleString":"WholeStageCodegen (3)","children":[{"nodeName":"ColumnarToRow","simpleString":"ColumnarToRow","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan parquet ","simpleString":"FileScan parquet [rank#56,name#57,net_worth#58,bday#59,age#60,nationality#61] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/C:/Users/zq_sl/Downloads/task_4/3_Spark_Basics/data_parquet], PartitionFilters: [isnotnull(nationality#61), (nationality#61 = Russia)], PushedFilters: [], ReadSchema: struct<rank:int,name:string,net_worth:string,bday:string,age:int>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[file:/C:/Users/zq_sl/Downloads/task_4/3_Spark_Basics/data_parquet]","ReadSchema":"struct<rank:int,name:string,net_worth:string,bday:string,age:int>","Format":"Parquet","Batched":"true","PartitionFilters":"[isnotnull(nationality#61), (nationality#61 = Russia)]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of files read","accumulatorId":24,"metricType":"sum"},{"name":"scan time","accumulatorId":27,"metricType":"timing"},{"name":"dynamic partition pruning time","accumulatorId":29,"metricType":"timing"},{"name":"metadata time","accumulatorId":25,"metricType":"timing"},{"name":"size of files read","accumulatorId":26,"metricType":"size"},{"name":"number of output rows","accumulatorId":23,"metricType":"sum"},{"name":"number of partitions read","accumulatorId":28,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":67,"metricType":"sum"},{"name":"number of input batches","accumulatorId":68,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":66,"metricType":"timing"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"task commit time","accumulatorId":5,"metricType":"timing"},{"name":"number of written files","accumulatorId":1,"metricType":"sum"},{"name":"job commit time","accumulatorId":6,"metricType":"timing"},{"name":"number of output rows","accumulatorId":3,"metricType":"sum"},{"name":"number of dynamic part","accumulatorId":4,"metricType":"sum"},{"name":"written output","accumulatorId":2,"metricType":"size"}]}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":0,"accumUpdates":[[10,1],[11,0],[12,5833]]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":0,"accumUpdates":[[24,1],[25,25],[26,1683],[28,1]]}
{"Event":"SparkListenerJobStart","Job ID":1,"Submission Time":1674028039448,"Stage Infos":[{"Stage ID":1,"Stage Attempt ID":0,"Stage Name":"csv at NativeMethodAccessorImpl.java:0","Number of Tasks":2,"RDD Info":[{"RDD ID":10,"Name":"UnionRDD","Scope":"{\"id\":\"9\",\"name\":\"Union\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[6,9],"Storage Level":{"Use Disk":false,"Use Memory":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":4,"Name":"FileScanRDD","Scope":"{\"id\":\"20\",\"name\":\"Scan csv \"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":9,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"21\",\"name\":\"WholeStageCodegen (3)\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[8],"Storage Level":{"Use Disk":false,"Use Memory":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":8,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"24\",\"name\":\"Scan parquet \"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[7],"Storage Level":{"Use Disk":false,"Use Memory":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":6,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"10\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[5],"Storage Level":{"Use Disk":false,"Use Memory":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":5,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"20\",\"name\":\"Scan csv \"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[4],"Storage Level":{"Use Disk":false,"Use Memory":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":7,"Name":"FileScanRDD","Scope":"{\"id\":\"24\",\"name\":\"Scan parquet \"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameWriter.csv(DataFrameWriter.scala:839)\nsun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.lang.reflect.Method.invoke(Method.java:498)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.lang.Thread.run(Thread.java:748)","Accumulables":[],"Resource Profile Id":0}],"Stage IDs":[1],"Properties":{"spark.sql.warehouse.dir":"file:/C:/Users/zq_sl/Downloads/task_4/3_Spark_Basics/spark-warehouse","spark.driver.host":"DESKTOP-CH1A60P","spark.serializer.objectStreamReset":"100","spark.history.fs.logDirectory":"file:///C:/Users/zq_sl/Downloads/task_4/for_history","spark.eventLog.enabled":"true","spark.driver.port":"58112","spark.rdd.compress":"True","spark.app.name":"spark_basic","spark.submit.pyFiles":"","spark.ui.showConsoleProgress":"true","spark.app.startTime":"1674028006275","spark.executor.id":"driver","spark.submit.deployMode":"client","spark.master":"local[*]","spark.eventLog.dir":"file:///C:/Users/zq_sl/Downloads/task_4/for_history","spark.sql.execution.id":"0","spark.app.id":"local-1674028009493"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":1,"Stage Attempt ID":0,"Stage Name":"csv at NativeMethodAccessorImpl.java:0","Number of Tasks":2,"RDD Info":[{"RDD ID":10,"Name":"UnionRDD","Scope":"{\"id\":\"9\",\"name\":\"Union\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[6,9],"Storage Level":{"Use Disk":false,"Use Memory":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":4,"Name":"FileScanRDD","Scope":"{\"id\":\"20\",\"name\":\"Scan csv \"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":9,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"21\",\"name\":\"WholeStageCodegen (3)\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[8],"Storage Level":{"Use Disk":false,"Use Memory":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":8,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"24\",\"name\":\"Scan parquet \"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[7],"Storage Level":{"Use Disk":false,"Use Memory":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":6,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"10\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[5],"Storage Level":{"Use Disk":false,"Use Memory":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":5,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"20\",\"name\":\"Scan csv \"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[4],"Storage Level":{"Use Disk":false,"Use Memory":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":7,"Name":"FileScanRDD","Scope":"{\"id\":\"24\",\"name\":\"Scan parquet \"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameWriter.csv(DataFrameWriter.scala:839)\nsun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.lang.reflect.Method.invoke(Method.java:498)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.lang.Thread.run(Thread.java:748)","Submission Time":1674028039455,"Accumulables":[],"Resource Profile Id":0},"Properties":{"spark.sql.warehouse.dir":"file:/C:/Users/zq_sl/Downloads/task_4/3_Spark_Basics/spark-warehouse","spark.driver.host":"DESKTOP-CH1A60P","spark.serializer.objectStreamReset":"100","spark.history.fs.logDirectory":"file:///C:/Users/zq_sl/Downloads/task_4/for_history","spark.eventLog.enabled":"true","spark.driver.port":"58112","spark.rdd.compress":"True","spark.app.name":"spark_basic","spark.submit.pyFiles":"","spark.ui.showConsoleProgress":"true","spark.app.startTime":"1674028006275","spark.executor.id":"driver","spark.submit.deployMode":"client","spark.master":"local[*]","spark.eventLog.dir":"file:///C:/Users/zq_sl/Downloads/task_4/for_history","spark.sql.execution.id":"0","spark.app.id":"local-1674028009493"}}
{"Event":"SparkListenerTaskStart","Stage ID":1,"Stage Attempt ID":0,"Task Info":{"Task ID":1,"Index":0,"Attempt":0,"Launch Time":1674028039628,"Executor ID":"driver","Host":"DESKTOP-CH1A60P","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":1,"Stage Attempt ID":0,"Task Info":{"Task ID":2,"Index":1,"Attempt":0,"Launch Time":1674028039631,"Executor ID":"driver","Host":"DESKTOP-CH1A60P","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":1,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":1,"Index":0,"Attempt":0,"Launch Time":1674028039628,"Executor ID":"driver","Host":"DESKTOP-CH1A60P","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1674028041230,"Failed":false,"Killed":false,"Accumulables":[{"ID":5,"Name":"task commit time","Update":"29","Value":"29","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":9,"Name":"number of output rows","Update":"95","Value":"95","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":63,"Name":"duration","Update":"1352","Value":"1352","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":64,"Name":"number of output rows","Update":"21","Value":"21","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":65,"Name":"number of output rows","Update":"21","Value":"21","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":69,"Name":"internal.metrics.executorDeserializeTime","Update":170,"Value":170,"Internal":true,"Count Failed Values":true},{"ID":70,"Name":"internal.metrics.executorDeserializeCpuTime","Update":140625000,"Value":140625000,"Internal":true,"Count Failed Values":true},{"ID":71,"Name":"internal.metrics.executorRunTime","Update":1413,"Value":1413,"Internal":true,"Count Failed Values":true},{"ID":72,"Name":"internal.metrics.executorCpuTime","Update":171875000,"Value":171875000,"Internal":true,"Count Failed Values":true},{"ID":73,"Name":"internal.metrics.resultSize","Update":3033,"Value":3033,"Internal":true,"Count Failed Values":true},{"ID":75,"Name":"internal.metrics.resultSerializationTime","Update":4,"Value":4,"Internal":true,"Count Failed Values":true},{"ID":78,"Name":"internal.metrics.peakExecutionMemory","Update":4198400,"Value":4198400,"Internal":true,"Count Failed Values":true},{"ID":90,"Name":"internal.metrics.input.bytesRead","Update":5833,"Value":5833,"Internal":true,"Count Failed Values":true},{"ID":91,"Name":"internal.metrics.input.recordsRead","Update":95,"Value":95,"Internal":true,"Count Failed Values":true},{"ID":92,"Name":"internal.metrics.output.bytesWritten","Update":1009,"Value":1009,"Internal":true,"Count Failed Values":true},{"ID":93,"Name":"internal.metrics.output.recordsWritten","Update":21,"Value":21,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0},"Task Metrics":{"Executor Deserialize Time":170,"Executor Deserialize CPU Time":140625000,"Executor Run Time":1413,"Executor CPU Time":171875000,"Peak Execution Memory":4198400,"Result Size":3033,"JVM GC Time":0,"Result Serialization Time":4,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":5833,"Records Read":95},"Output Metrics":{"Bytes Written":1009,"Records Written":21},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":1,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":2,"Index":1,"Attempt":0,"Launch Time":1674028039631,"Executor ID":"driver","Host":"DESKTOP-CH1A60P","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1674028043461,"Failed":false,"Killed":false,"Accumulables":[{"ID":5,"Name":"task commit time","Update":"5","Value":"34","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":23,"Name":"number of output rows","Update":"9","Value":"9","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":27,"Name":"scan time","Update":"3417","Value":"3417","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":66,"Name":"duration","Update":"3634","Value":"3634","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":67,"Name":"number of output rows","Update":"9","Value":"9","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":68,"Name":"number of input batches","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":69,"Name":"internal.metrics.executorDeserializeTime","Update":167,"Value":337,"Internal":true,"Count Failed Values":true},{"ID":70,"Name":"internal.metrics.executorDeserializeCpuTime","Update":125000000,"Value":265625000,"Internal":true,"Count Failed Values":true},{"ID":71,"Name":"internal.metrics.executorRunTime","Update":3655,"Value":5068,"Internal":true,"Count Failed Values":true},{"ID":72,"Name":"internal.metrics.executorCpuTime","Update":1203125000,"Value":1375000000,"Internal":true,"Count Failed Values":true},{"ID":73,"Name":"internal.metrics.resultSize","Update":2947,"Value":5980,"Internal":true,"Count Failed Values":true},{"ID":90,"Name":"internal.metrics.input.bytesRead","Update":4407,"Value":10240,"Internal":true,"Count Failed Values":true},{"ID":91,"Name":"internal.metrics.input.recordsRead","Update":9,"Value":104,"Internal":true,"Count Failed Values":true},{"ID":92,"Name":"internal.metrics.output.bytesWritten","Update":507,"Value":1516,"Internal":true,"Count Failed Values":true},{"ID":93,"Name":"internal.metrics.output.recordsWritten","Update":9,"Value":30,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":216865560,"JVMOffHeapMemory":152439704,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":5405478,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":5405478,"OffHeapUnifiedMemory":0,"DirectPoolMemory":8209,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":16,"MinorGCTime":198,"MajorGCCount":4,"MajorGCTime":338},"Task Metrics":{"Executor Deserialize Time":167,"Executor Deserialize CPU Time":125000000,"Executor Run Time":3655,"Executor CPU Time":1203125000,"Peak Execution Memory":0,"Result Size":2947,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":4407,"Records Read":9},"Output Metrics":{"Bytes Written":507,"Records Written":9},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":1,"Stage Attempt ID":0,"Stage Name":"csv at NativeMethodAccessorImpl.java:0","Number of Tasks":2,"RDD Info":[{"RDD ID":10,"Name":"UnionRDD","Scope":"{\"id\":\"9\",\"name\":\"Union\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[6,9],"Storage Level":{"Use Disk":false,"Use Memory":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":4,"Name":"FileScanRDD","Scope":"{\"id\":\"20\",\"name\":\"Scan csv \"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":9,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"21\",\"name\":\"WholeStageCodegen (3)\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[8],"Storage Level":{"Use Disk":false,"Use Memory":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":8,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"24\",\"name\":\"Scan parquet \"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[7],"Storage Level":{"Use Disk":false,"Use Memory":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":6,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"10\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[5],"Storage Level":{"Use Disk":false,"Use Memory":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":5,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"20\",\"name\":\"Scan csv \"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[4],"Storage Level":{"Use Disk":false,"Use Memory":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":7,"Name":"FileScanRDD","Scope":"{\"id\":\"24\",\"name\":\"Scan parquet \"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameWriter.csv(DataFrameWriter.scala:839)\nsun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.lang.reflect.Method.invoke(Method.java:498)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.lang.Thread.run(Thread.java:748)","Submission Time":1674028039455,"Completion Time":1674028043463,"Accumulables":[{"ID":5,"Name":"task commit time","Value":"34","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":9,"Name":"number of output rows","Value":"95","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":23,"Name":"number of output rows","Value":"9","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":27,"Name":"scan time","Value":"3417","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":63,"Name":"duration","Value":"1352","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":64,"Name":"number of output rows","Value":"21","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":65,"Name":"number of output rows","Value":"21","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":66,"Name":"duration","Value":"3634","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":67,"Name":"number of output rows","Value":"9","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":68,"Name":"number of input batches","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":69,"Name":"internal.metrics.executorDeserializeTime","Value":337,"Internal":true,"Count Failed Values":true},{"ID":70,"Name":"internal.metrics.executorDeserializeCpuTime","Value":265625000,"Internal":true,"Count Failed Values":true},{"ID":71,"Name":"internal.metrics.executorRunTime","Value":5068,"Internal":true,"Count Failed Values":true},{"ID":72,"Name":"internal.metrics.executorCpuTime","Value":1375000000,"Internal":true,"Count Failed Values":true},{"ID":73,"Name":"internal.metrics.resultSize","Value":5980,"Internal":true,"Count Failed Values":true},{"ID":75,"Name":"internal.metrics.resultSerializationTime","Value":4,"Internal":true,"Count Failed Values":true},{"ID":78,"Name":"internal.metrics.peakExecutionMemory","Value":4198400,"Internal":true,"Count Failed Values":true},{"ID":90,"Name":"internal.metrics.input.bytesRead","Value":10240,"Internal":true,"Count Failed Values":true},{"ID":91,"Name":"internal.metrics.input.recordsRead","Value":104,"Internal":true,"Count Failed Values":true},{"ID":92,"Name":"internal.metrics.output.bytesWritten","Value":1516,"Internal":true,"Count Failed Values":true},{"ID":93,"Name":"internal.metrics.output.recordsWritten","Value":30,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0}}
{"Event":"SparkListenerJobEnd","Job ID":1,"Completion Time":1674028043463,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":0,"accumUpdates":[[1,2],[6,168],[3,30],[4,0],[2,1516]]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":0,"time":1674028043647}
{"Event":"SparkListenerApplicationEnd","Timestamp":1674028044776}
